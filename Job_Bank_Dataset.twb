<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0818.1050                               -->
<workbook original-version='18.1' source-build='2025.2.2 (20252.25.0818.1050)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='TheWhereShouldIWorkTool_17581909951970' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range granularity='0.05' max='1.0' min='0.0' />
      </column>
      <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
      <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
        <calculation class='tableau' formula='&quot;Combined&quot;' />
        <members>
          <member value='&quot;Combined&quot;' />
          <member value='&quot;Salary&quot;' />
          <member value='&quot;Vacancy&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' inline='true' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Job Bank Dataset Final' name='excel-direct.0zv6h7n0xg5qgs169m43a0iwiaeg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Surbhi/Documents/Data Analytics/2.0/Tableau/My_Projects/Job Bank Dataset Final.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0zv6h7n0xg5qgs169m43a0iwiaeg' name='Job Bank Dataset' table='[&apos;Job Bank Dataset$&apos;]' type='table'>
          <columns gridOrigin='A1:J10001:no:A1:J10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Job Title' ordinal='0' />
            <column datatype='date' name='First Posting Date' ordinal='1' />
            <column datatype='integer' name='Vacancy Count' ordinal='2' />
            <column datatype='string' name='Experience Level' ordinal='3' />
            <column datatype='string' name='Province/Territory' ordinal='4' />
            <column datatype='string' name='City' ordinal='5' />
            <column datatype='string' name='Economic  Region' ordinal='6' />
            <column datatype='string' name='Employment Type' ordinal='7' />
            <column datatype='string' name='Employment Term' ordinal='8' />
            <column datatype='real' name='Annual Salary' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J10001:no:A1:J10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Job Title]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Job Title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Posting Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[First Posting Date]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>First Posting Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vacancy Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vacancy Count]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Vacancy Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience Level</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Experience Level]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Experience Level</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/Territory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province/Territory]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Province/Territory</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economic  Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Economic  Region]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Economic  Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Employment Type]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Employment Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment Term</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Employment Term]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Employment Term</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Salary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual Salary]</local-name>
            <parent-name>[Job Bank Dataset]</parent-name>
            <remote-alias>Annual Salary</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
      <column caption='Rank by Salary' datatype='integer' name='[Calculation_1144477305129627648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(AVG([Annual Salary]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Avg Salary' datatype='real' name='[Calculation_1460010755363856385]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Annual Salary])' />
      </column>
      <column caption='Vacancies' datatype='integer' name='[Calculation_1460010755363962882]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Vacancy Count])' />
      </column>
      <column caption='Vacancy Weight' datatype='real' name='[Calculation_1460010755364065283]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 - [Parameters].[Parameter 1]' />
      </column>
      <column caption='Salary Index' datatype='real' name='[Calculation_1460010755364388868]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1460010755363856385] / WINDOW_MAX([Calculation_1460010755363856385])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Vacancy Index' datatype='real' name='[Calculation_1460010755364597765]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1460010755363962882] / WINDOW_MAX([Calculation_1460010755363962882])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Score (Combined)' datatype='real' name='[Calculation_1460010755366084614]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1460010755364388868] * [Parameters].[Parameter 1] + &#13;&#10;[Calculation_1460010755364597765] * [Calculation_1460010755364065283]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Score (Switchable)' datatype='real' name='[Calculation_1460010755366350855]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN  &quot;Salary&quot; THEN [Calculation_1460010755364388868]&#13;&#10;    WHEN  &quot;Vacancy&quot; THEN [Calculation_1460010755364597765]&#13;&#10;ELSE [Calculation_1460010755366084614]&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1460010755366801416]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE([Calculation_1460010755366350855], &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Top N Filter' datatype='boolean' name='[Calculation_1460010755366936585]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1460010755366801416] &lt;= [Parameters].[Parameter 2]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Vacancies by Job+Province' datatype='integer' name='[Calculation_1657043241563881476]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Province/Territory], [Job Title] : SUM([Vacancy Count]) }' />
      </column>
      <column caption='Max Vacancies by Province' datatype='integer' name='[Calculation_1657043241564016645]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Province/Territory] : MAX([Calculation_1657043241563881476]) }' />
      </column>
      <column caption='Top Job (LOD)' datatype='string' name='[Calculation_1657043241564114950]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MIN(&#13;&#10;  IF [Calculation_1657043241563881476] = [Calculation_1657043241564016645]&#13;&#10;  THEN [Job Title]&#13;&#10;  END&#13;&#10;)' />
      </column>
      <column caption='Rank by Vacancy' datatype='integer' name='[Calculation_1693072034782928901]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(SUM([Vacancy Count]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Avg Salary Per Job' datatype='real' name='[Calculation_730427617529802753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Job Title] : AVG([Annual Salary]) }' />
      </column>
      <column caption='Max Avg Salary' datatype='real' name='[Calculation_730427617529913346]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : MAX([Calculation_730427617529802753]) }' />
      </column>
      <column caption='Is Highest Paying Job' datatype='boolean' name='[Calculation_730427617530064899]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_730427617529802753] = [Calculation_730427617529913346]' />
      </column>
      <column caption='Label Vacancies' datatype='string' name='[Calculation_813181262530080770]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Vacancy Count]) &gt; 200 THEN STR(SUM([Vacancy Count]))&#13;&#10;END' />
      </column>
      <column caption='Highest Salary Job' datatype='string' name='[Calculation_889460978732318720]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF RANK( AVG([Annual Salary]), &apos;desc&apos;) = 1&#13;&#10;THEN&#13;&#10;    MIN([Job Title])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank for tile' datatype='integer' name='[Calculation_889460978738229250]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(AVG([Annual Salary]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Economic  Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
      <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
      <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
      <column caption='Job Bank Dataset' datatype='table' name='[__tableau_internal_object_id__].[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]' role='measure' type='quantitative' />
      <column-instance column='[Annual Salary]' derivation='Avg' name='[avg:Annual Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vacancy Count]' derivation='Avg' name='[avg:Vacancy Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Job Title]' derivation='Min' name='[min:Job Title:nk]' pivot='key' type='nominal' />
      <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
      <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
      <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1460010755363856385]' derivation='User' name='[usr:Calculation_1460010755363856385:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Province)' hidden='true' name='[Action (Province)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Province/Territory]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Province, Region, City'>
          <field>[Province/Territory]</field>
          <field>[Economic  Region]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Surbhi/AppData/Local/Temp/TableauTemp/#TableauTemp_182y0v80oul5ig15yg1te088xb5a.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/04/2025 02:01:03 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Job Title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Job Title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Job Title</remote-alias>
              <ordinal>0</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>676</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>First Posting Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[First Posting Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>First Posting Date</remote-alias>
              <ordinal>1</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vacancy Count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Vacancy Count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vacancy Count</remote-alias>
              <ordinal>2</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Experience Level</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Experience Level]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Experience Level</remote-alias>
              <ordinal>3</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province/Territory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province/Territory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Province/Territory</remote-alias>
              <ordinal>4</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>5</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1813</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economic  Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Economic  Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economic  Region</remote-alias>
              <ordinal>6</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Employment Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment Type</remote-alias>
              <ordinal>7</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Employment Term</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Employment Term]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Employment Term</remote-alias>
              <ordinal>8</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual Salary</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Annual Salary]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual Salary</remote-alias>
              <ordinal>9</ordinal>
              <family>Job Bank Dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.877743' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.122257' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Job Title:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Advertising and marketing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadcasters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiropractors&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Correctional service managers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dietitians and nutritionists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Employment counsellors&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Food and beverage servers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harvesting labourers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Industrial designers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Labourers in metal fabrication&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mail and postal workers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metal fabricators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oil and gas drilling labourers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Other sales related occupations&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Physicists and astronomers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Property administrators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rubber processing machine operators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Specialist physicians&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theatre and fashion designers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Water and waste treatment plant operators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cashiers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Construction estimators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Construction trades labourers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Data analysts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Electrical cable workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finance supervisors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Geological and mineral technicians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hosts/hostesses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Insurance and real estate managers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Library assistants and clerks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medical administrative assistants&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Natural and science policy researchers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Other metal products machine operators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patternmakers - textile and leather products&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Power system electricians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Registered nurses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silviculture and forestry workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taxi drivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Underground miners&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biological technicians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chemical plant machine operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Construction trades - contractors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dental hygienists&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electrical trades - contractors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fire chiefs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glaziers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HR professionals&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Janitors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kitchen helpers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Logging machinery operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Medical sonographers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nursery and greenhouse workers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other products manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pet groomers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Process control machine operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Retail and wholesale managers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Social policy researchers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Testers and graders - food and beverage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;User support technicians&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;General farm workers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Air traffic controllers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Butchers and meat cutters&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Collectors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Court officers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drillers and blasters&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Event planners&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Foundry workers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Health policy researchers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Industrial motor assemblers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Landscaping contractors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marine harvest labourers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mineral and metal processing supervisors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other automotive installers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other trades helpers and labourers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plasterers and drywall installers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purchasing agents&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;School teacher assistants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sr. managers - financial services&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trade occupations&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Weavers and knitters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Agricultural representatives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadcasting managers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Civil engineers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Correctional service officers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Disable people instructors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Engineering inspectors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furniture refinishers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Health and safety inspectors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Industrial electricians&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Land survey technicians&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Managers in agriculture&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metal forming and shaping - contractors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oil and solid fuel heating mechanics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other service support occupations, n.e.c.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Physiotherapists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Psychologists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sales and account rep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Specialized cleaners&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tilesetters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Water transport deck and engine room crew&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Accounting technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Biologists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chemical products labourers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crane operators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dental technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Electricians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fish and seafood plant workers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graphic arts technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HR recruitment officers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jewellers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Machine fitters&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medical technologists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nursing co-ordinators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Other professional engineers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Petrolem, gas and chemical processing supervisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Producers and directors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Retail sales supervisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Social workers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Textile and leather products manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utilities managers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Authors and writers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carpenters&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conductors, composers and arrangers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Customs, ship and other brokers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Educational counsellors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Family physicians&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Heavy-duty equipment mechanics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Home building managers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Insulators&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mechanical engineering technicians&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Museum and art galleries technical occupations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other instructors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parole officers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Post-secondary teaching&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Recreation and fitness policy service directors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shippers and receivers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Survey interviewers and statistical clerks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Transportation route schedulers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accommodation service managers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banking and investment managers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Casino occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Construction inspectors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Data entry clerks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Electrical engineers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Financial analysts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Geological engineers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hotel front desk clerks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Insurance underwriters&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Library technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Medical lab technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Natural resources managers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other performers, n.e.c.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Payroll clerks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Practitioners of natural healing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Residential and commercial installers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Small engine repairers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Technical sales rep&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University professors and lecturers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Architects&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Audio and video technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cardiology technologists&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Computer network technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Customer service supervisors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Editors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Facility maintenance managers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavy equipment operators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Information systems analysts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawyers and Quebec notaries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mechanic trades - contractors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Motor vehicle assemblers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other financial officers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paralegal occupations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Plateless printing equipment operators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Records management technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Service station attendants&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Storekeepers and partspersons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Travel counsellors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wood products assemblers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Administrative officers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boat assemblers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chemical technicians&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Customer and personal services managers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dentists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Electronic assemblers and testers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floor covering installers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graphic designers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Immigration and border services officers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Journalists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Machining tool operators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Metal and mineral inspectors&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Occupational therapists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Other professional occupations in physical sciences&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pharmacists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Production logistics co-ordinators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Retail salespersons&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Software developers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Textile fibre processing machine operators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Veterinarians&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amusement parks operators&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabinetmakers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College instructors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Court reporters and transcriptionists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Early childhood educators&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Executive assistants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Funeral directors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Health practitioners&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Industrial painters and coaters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Landscaping maintenance labourers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Massage therapists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mining and quarrying supervisors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other broadcasting occupations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outdoor sport guides&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plastic and rubber manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Purchasing managers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;School teachers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sr. managers - health and education&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Transit operators&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Web designers and developers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Appliance repairers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Artisans and craftspersons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cable television service technicians&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Computer and information systems managers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Economic analysts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Executive housekeepers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Furniture assemblers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Healthcare managers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Industrial sewing machine operators&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laundry and dry cleaning&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Material handlers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mining engineers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other business services managers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Painters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plastic products assemblers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Railway and motor transport labourers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seafood processing labourers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sr. managers - trade and broadcasting&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Transit supervisors&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Welders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Architectural technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Audiologists&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cardiopulmonary technologists&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Concrete finishers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Customer services representatives - financial institutions&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Education policy researchers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Family counsellors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gas fitters&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Information systems technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Legal administrative assistants&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mechanical assemblers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motor vehicle body repairers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Other health services occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paramedical occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plumbers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Recreation and fitness policy officers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheet metal workers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Supply chain supervisors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Transportation managers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodworking machine operators&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Automotive service technicians&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carpentry trades - contractors&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conservation officers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dancers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Electrical appliance assemblers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Film and video camera operators&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;General office support workers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Home child care providers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Insurance agents and brokers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Library and museum managers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mechanical engineers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Musicians and singers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other managers in public administration&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patient service associates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Power engineers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Refrigeration and air conditioning mechanics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shoe repairers and shoemakers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tailors and dressmakers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Business developement officers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cleaning supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Courier delivery drivers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dispatchers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Engineering managers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Food service supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest products processing supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Health and social policy admins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Industrial engineers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Land surveyors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Managers in horticulture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metallurgical engineers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Opticians&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other services supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pipefitters amd installers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Public works and maintenance labourers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sawmill machine operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sr. government officials&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tool and die makers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Water transport engineer officers&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Transport truck drivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Administrative supervisors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bricklayers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chemists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corporate sales managers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denturists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Electronics manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Food and beverage products labourers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hairstylists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Industrial butchers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Librarians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Machinists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Metal and mineral processing labourers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceanographers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Other repairers and servicers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Photographers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Professional occupations in religion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roofers and shinglers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Software engineers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Textile products inspectors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Veterinary technicians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Banking clerks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Construction managers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deck officers, water transport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Electrical mechanics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Financial auditors&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Geomatics and meteorology technical occupations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Housekeepers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Interior designers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Licensed practical nurses&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medical laboratory technologists&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Non-commissioned ranks of the Canadian Forces&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other processing labourers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Personnel clerks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Printing occupations supervisors&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Restaurant managers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Social and community workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Telecommunications installation workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Upholsterers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aquaculture managers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Assessors and valuators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Camera, platemaking and prepress&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Computer engineers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Economists&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fabric and leather cutters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Furniture manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Heavy equipment operator crews&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Industrial technicians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Law enforcement officers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mathematicians and statisticians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Motocycle mechanics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other customer service reps&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paper converting machine operators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plastics processing machine operators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Receptionists&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Security guards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Store clerks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Translators and interpreters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wood and paper processing labourers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Air pilots and airport reps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Business management consulting&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coaches&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Couriers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drafting technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estheticians and electrologists&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forestry technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Health information management occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Industrial instrument technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Landscape architects&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manufacturing managers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metalworking machine operators&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Other administrative services managers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Other therapy occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pipefitting trades - contractors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pulp mill machine operators&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;School principals and administrators&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sr. managers - construction and transportation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tour and travel guides&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Water well drillers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Accomodation and travel services support occupations&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bartenders&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chemical engineers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Construction millwrights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dental assistants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Electrical technicians&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Financial managers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glass machine operators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HR managers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ironworkers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Light duty cleaners&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Medical radiation technologists&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Non-destructive testers and technicians&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Other product assemblers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pest controllers and fumigators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Printing press operators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Retail and wholesale buyers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Social and personal consultants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Telecommunications line and cable workers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Urban and land use planners&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Experience Level:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1-2 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5+ years&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;3-5 years&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;No experience&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2-3 years&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;&lt;1 year&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1-6 months&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Not Specified&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Job Title:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Advertising and marketing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadcasters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiropractors&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Correctional service managers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dietitians and nutritionists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Employment counsellors&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Food and beverage servers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harvesting labourers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Industrial designers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Labourers in metal fabrication&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mail and postal workers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metal fabricators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oil and gas drilling labourers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Other sales related occupations&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Physicists and astronomers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Property administrators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rubber processing machine operators&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Specialist physicians&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theatre and fashion designers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Water and waste treatment plant operators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cashiers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Construction estimators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Construction trades labourers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Data analysts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Electrical cable workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finance supervisors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Geological and mineral technicians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hosts/hostesses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Insurance and real estate managers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Library assistants and clerks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medical administrative assistants&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Natural and science policy researchers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Other metal products machine operators&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patternmakers - textile and leather products&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Power system electricians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Registered nurses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silviculture and forestry workers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taxi drivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Underground miners&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Biological technicians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chemical plant machine operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Construction trades - contractors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dental hygienists&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electrical trades - contractors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fire chiefs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glaziers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HR professionals&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Janitors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kitchen helpers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Logging machinery operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Medical sonographers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nursery and greenhouse workers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other products manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pet groomers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Process control machine operators&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Retail and wholesale managers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Social policy researchers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Testers and graders - food and beverage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;User support technicians&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;General farm workers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Air traffic controllers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Butchers and meat cutters&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Collectors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Court officers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drillers and blasters&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Event planners&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Foundry workers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Health policy researchers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Industrial motor assemblers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Landscaping contractors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marine harvest labourers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mineral and metal processing supervisors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other automotive installers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other trades helpers and labourers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plasterers and drywall installers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Purchasing agents&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;School teacher assistants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sr. managers - financial services&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trade occupations&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Weavers and knitters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Agricultural representatives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadcasting managers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Civil engineers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Correctional service officers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Disable people instructors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Engineering inspectors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furniture refinishers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Health and safety inspectors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Industrial electricians&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Land survey technicians&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Managers in agriculture&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metal forming and shaping - contractors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oil and solid fuel heating mechanics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other service support occupations, n.e.c.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Physiotherapists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Psychologists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sales and account rep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Specialized cleaners&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tilesetters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Water transport deck and engine room crew&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Accounting technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Biologists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chemical products labourers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crane operators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dental technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Electricians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fish and seafood plant workers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graphic arts technicians&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HR recruitment officers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jewellers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Machine fitters&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medical technologists&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nursing co-ordinators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Other professional engineers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Petrolem, gas and chemical processing supervisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Producers and directors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Retail sales supervisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Social workers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Textile and leather products manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utilities managers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Authors and writers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carpenters&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conductors, composers and arrangers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Customs, ship and other brokers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Educational counsellors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Family physicians&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Heavy-duty equipment mechanics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Home building managers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Insulators&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mechanical engineering technicians&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Museum and art galleries technical occupations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other instructors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parole officers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Post-secondary teaching&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Recreation and fitness policy service directors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shippers and receivers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Survey interviewers and statistical clerks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Transportation route schedulers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accommodation service managers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banking and investment managers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Casino occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Construction inspectors&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Data entry clerks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Electrical engineers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Financial analysts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Geological engineers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hotel front desk clerks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Insurance underwriters&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Library technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Medical lab technicians&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Natural resources managers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other performers, n.e.c.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Payroll clerks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Practitioners of natural healing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Residential and commercial installers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Small engine repairers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Technical sales rep&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University professors and lecturers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Architects&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Audio and video technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cardiology technologists&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Computer network technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Customer service supervisors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Editors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Facility maintenance managers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavy equipment operators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Information systems analysts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawyers and Quebec notaries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mechanic trades - contractors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Motor vehicle assemblers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other financial officers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paralegal occupations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Plateless printing equipment operators&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Records management technicians&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Service station attendants&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Storekeepers and partspersons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Travel counsellors&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wood products assemblers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Administrative officers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boat assemblers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chemical technicians&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Customer and personal services managers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dentists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Electronic assemblers and testers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floor covering installers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graphic designers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Immigration and border services officers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Journalists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Machining tool operators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Metal and mineral inspectors&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Occupational therapists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Other professional occupations in physical sciences&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pharmacists&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Production logistics co-ordinators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Retail salespersons&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Software developers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Textile fibre processing machine operators&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Veterinarians&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amusement parks operators&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cabinetmakers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College instructors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Court reporters and transcriptionists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Early childhood educators&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Executive assistants&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Funeral directors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Health practitioners&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Industrial painters and coaters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Landscaping maintenance labourers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Massage therapists&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mining and quarrying supervisors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other broadcasting occupations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outdoor sport guides&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plastic and rubber manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Purchasing managers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;School teachers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sr. managers - health and education&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Transit operators&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Web designers and developers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Appliance repairers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Artisans and craftspersons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cable television service technicians&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Computer and information systems managers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Economic analysts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Executive housekeepers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Furniture assemblers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Healthcare managers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Industrial sewing machine operators&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laundry and dry cleaning&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Material handlers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mining engineers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other business services managers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Painters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plastic products assemblers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Railway and motor transport labourers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seafood processing labourers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sr. managers - trade and broadcasting&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Transit supervisors&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Welders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Architectural technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Audiologists&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cardiopulmonary technologists&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Concrete finishers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Customer services representatives - financial institutions&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Education policy researchers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Family counsellors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gas fitters&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Information systems technicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Legal administrative assistants&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mechanical assemblers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motor vehicle body repairers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Other health services occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paramedical occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plumbers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Recreation and fitness policy officers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheet metal workers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Supply chain supervisors&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Transportation managers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodworking machine operators&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Automotive service technicians&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carpentry trades - contractors&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conservation officers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dancers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Electrical appliance assemblers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Film and video camera operators&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;General office support workers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Home child care providers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Insurance agents and brokers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Library and museum managers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mechanical engineers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Musicians and singers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other managers in public administration&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patient service associates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Power engineers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Refrigeration and air conditioning mechanics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shoe repairers and shoemakers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tailors and dressmakers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Business developement officers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cleaning supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Courier delivery drivers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dispatchers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Engineering managers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Food service supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest products processing supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Health and social policy admins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Industrial engineers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Land surveyors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Managers in horticulture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metallurgical engineers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Opticians&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other services supervisors&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pipefitters amd installers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Public works and maintenance labourers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sawmill machine operators&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sr. government officials&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tool and die makers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Water transport engineer officers&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Transport truck drivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Administrative supervisors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bricklayers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chemists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corporate sales managers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denturists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Electronics manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Food and beverage products labourers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hairstylists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Industrial butchers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Librarians&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Machinists&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Metal and mineral processing labourers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceanographers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Other repairers and servicers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Photographers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Professional occupations in religion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roofers and shinglers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Software engineers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Textile products inspectors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Veterinary technicians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Banking clerks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Construction managers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deck officers, water transport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Electrical mechanics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Financial auditors&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Geomatics and meteorology technical occupations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Housekeepers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Interior designers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Licensed practical nurses&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medical laboratory technologists&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Non-commissioned ranks of the Canadian Forces&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other processing labourers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Personnel clerks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Printing occupations supervisors&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Restaurant managers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Social and community workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Telecommunications installation workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Upholsterers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aquaculture managers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Assessors and valuators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Camera, platemaking and prepress&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Computer engineers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Economists&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fabric and leather cutters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Furniture manufacturing supervisors&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Heavy equipment operator crews&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Industrial technicians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Law enforcement officers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mathematicians and statisticians&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Motocycle mechanics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Other customer service reps&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paper converting machine operators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plastics processing machine operators&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Receptionists&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Security guards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Store clerks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Translators and interpreters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wood and paper processing labourers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Air pilots and airport reps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Business management consulting&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coaches&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Couriers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drafting technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estheticians and electrologists&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forestry technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Health information management occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Industrial instrument technicians&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Landscape architects&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manufacturing managers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metalworking machine operators&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Other administrative services managers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Other therapy occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pipefitting trades - contractors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pulp mill machine operators&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;School principals and administrators&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sr. managers - construction and transportation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tour and travel guides&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Water well drillers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Accomodation and travel services support occupations&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bartenders&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chemical engineers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Construction millwrights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dental assistants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Electrical technicians&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Financial managers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glass machine operators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HR managers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ironworkers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Light duty cleaners&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Medical radiation technologists&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Non-destructive testers and technicians&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Other product assemblers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pest controllers and fumigators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Printing press operators&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Retail and wholesale buyers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Social and personal consultants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Telecommunications line and cable workers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Urban and land use planners&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Province/Territory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yukon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Québec&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nunavut&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755363856385:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Vacancy Count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range granularity='0.05' max='1.0' min='0.0' />
        </column>
        <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
          <calculation class='tableau' formula='&quot;Combined&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Job Bank Dataset' id='Job Bank Dataset_3D0743DFDFD247BE8693BAA904B710B2'>
            <properties context=''>
              <relation connection='excel-direct.0zv6h7n0xg5qgs169m43a0iwiaeg' name='Job Bank Dataset' table='[&apos;Job Bank Dataset$&apos;]' type='table'>
                <columns gridOrigin='A1:J10001:no:A1:J10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Job Title' ordinal='0' />
                  <column datatype='date' name='First Posting Date' ordinal='1' />
                  <column datatype='integer' name='Vacancy Count' ordinal='2' />
                  <column datatype='string' name='Experience Level' ordinal='3' />
                  <column datatype='string' name='Province/Territory' ordinal='4' />
                  <column datatype='string' name='City' ordinal='5' />
                  <column datatype='string' name='Economic  Region' ordinal='6' />
                  <column datatype='string' name='Employment Type' ordinal='7' />
                  <column datatype='string' name='Employment Term' ordinal='8' />
                  <column datatype='real' name='Annual Salary' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_8AF3CD63E291446FBA5AEA843B584351]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Vacancies by Province and Top Jobs' type='sheet' worksheet='Vacancy Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Vacancies by Province and Top Jobs' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Dashbrd 2 Top Demand'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.05' max='1.0' min='0.0' />
            </column>
            <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
              <calculation class='tableau' formula='&quot;Combined&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Avg Salary' datatype='real' name='[Calculation_1460010755363856385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Annual Salary])' />
            </column>
            <column caption='Vacancies' datatype='integer' name='[Calculation_1460010755363962882]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vacancy Count])' />
            </column>
            <column caption='Vacancy Weight' datatype='real' name='[Calculation_1460010755364065283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - [Parameters].[Parameter 1]' />
            </column>
            <column caption='Salary Index' datatype='real' name='[Calculation_1460010755364388868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363856385] / WINDOW_MAX([Calculation_1460010755363856385])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vacancy Index' datatype='real' name='[Calculation_1460010755364597765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363962882] / WINDOW_MAX([Calculation_1460010755363962882])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Combined)' datatype='real' name='[Calculation_1460010755366084614]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755364388868] * [Parameters].[Parameter 1] + &#13;&#10;[Calculation_1460010755364597765] * [Calculation_1460010755364065283]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Switchable)' datatype='real' name='[Calculation_1460010755366350855]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN  &quot;Salary&quot; THEN [Calculation_1460010755364388868]&#13;&#10;    WHEN  &quot;Vacancy&quot; THEN [Calculation_1460010755364597765]&#13;&#10;ELSE [Calculation_1460010755366084614]&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1460010755366801416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_1460010755366350855], &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Top N Filter' datatype='boolean' name='[Calculation_1460010755366936585]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1460010755366801416] &lt;= [Parameters].[Parameter 2]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vacancies by Job+Province' datatype='integer' name='[Calculation_1657043241563881476]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Province/Territory], [Job Title] : SUM([Vacancy Count]) }' />
            </column>
            <column caption='Max Vacancies by Province' datatype='integer' name='[Calculation_1657043241564016645]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Province/Territory] : MAX([Calculation_1657043241563881476]) }' />
            </column>
            <column caption='Top Job (LOD)' datatype='string' name='[Calculation_1657043241564114950]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MIN(&#13;&#10;  IF [Calculation_1657043241563881476] = [Calculation_1657043241564016645]&#13;&#10;  THEN [Job Title]&#13;&#10;  END&#13;&#10;)' />
            </column>
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1460010755366936585]' derivation='User' name='[usr:Calculation_1460010755366936585:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366801416]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366350855]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364597765]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364388868]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366084614]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1657043241564114950]' derivation='User' name='[usr:Calculation_1657043241564114950:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Action (Province)]'>
            <groupfilter function='level-members' level='[Province/Territory]' user:ui-action-filter='[Action1_8AF3CD63E291446FBA5AEA843B584351]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Experience Level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='4'>
            <groupfilter function='level-members' level='[none:Province/Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1460010755366936585:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Action (Province)]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='471' />
            <format attr='height' value='92' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1657043241564114950:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1657043241564114950:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#333333' fontsize='12'>Top In-Demand Job</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{793B0183-5625-4DFE-8152-1DCB9C7C3274}' />
    </worksheet>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Job Market Heatmap</run>
            <run>Æ&#10;</run>
            <run bold='true' fontsize='12' italic='true'>Darker shades indicate higher vacancies. Hover to view salary insights</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Label Vacancies' datatype='string' name='[Calculation_813181262530080770]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Vacancy Count]) &gt; 200 THEN STR(SUM([Vacancy Count]))&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Annual Salary]' derivation='Avg' name='[avg:Annual Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_813181262530080770]' derivation='User' name='[usr:Calculation_813181262530080770:nk:2]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Vacancy Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Job Title:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;British Columbia&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Manitoba&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;New Brunswick&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Newfoundland and Labrador&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Northwest Territories&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Nova Scotia&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Nunavut&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Ontario&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Prince Edward Island&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Québec&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Saskatchewan&quot;' />
              <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' member-value='&quot;Ontario&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
            <shelf-sort-v2 dimension-to-sort='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' member-value='&quot;Transport truck drivers&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='94' />
            <format attr='width' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='82' />
            <format attr='width' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='223' />
            <format attr='height' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='37' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='n#,##0;-#,##0' />
            <format attr='font-style' value='italic' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='bold' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='52118.400000000001' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' max='73516.800000000003' min='30720.0' palette='green_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' />
              <size column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_813181262530080770:nk:2]' />
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Job Title:&#9;</run>
                <run><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]>
]]></run>
                <run fontcolor='#757575'>Province:&#9;</run>
                <run><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]>]]></run>
                <run fontcolor='#757575'>Æ&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'><![CDATA[Vacancy:  <[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]>]]></run>
                <run><![CDATA[
Annual Salary: <[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</rows>
        <cols>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</cols>
      </table>
      <simple-id uuid='{C52E620D-4EAA-450B-98A7-B1E93592C094}' />
    </worksheet>
    <worksheet name='Highest Paying Job'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.05' max='1.0' min='0.0' />
            </column>
            <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
              <calculation class='tableau' formula='&quot;Combined&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Avg Salary' datatype='real' name='[Calculation_1460010755363856385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Annual Salary])' />
            </column>
            <column caption='Vacancies' datatype='integer' name='[Calculation_1460010755363962882]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vacancy Count])' />
            </column>
            <column caption='Vacancy Weight' datatype='real' name='[Calculation_1460010755364065283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - [Parameters].[Parameter 1]' />
            </column>
            <column caption='Salary Index' datatype='real' name='[Calculation_1460010755364388868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363856385] / WINDOW_MAX([Calculation_1460010755363856385])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vacancy Index' datatype='real' name='[Calculation_1460010755364597765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363962882] / WINDOW_MAX([Calculation_1460010755363962882])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Combined)' datatype='real' name='[Calculation_1460010755366084614]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755364388868] * [Parameters].[Parameter 1] + &#13;&#10;[Calculation_1460010755364597765] * [Calculation_1460010755364065283]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Switchable)' datatype='real' name='[Calculation_1460010755366350855]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN  &quot;Salary&quot; THEN [Calculation_1460010755364388868]&#13;&#10;    WHEN  &quot;Vacancy&quot; THEN [Calculation_1460010755364597765]&#13;&#10;ELSE [Calculation_1460010755366084614]&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1460010755366801416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_1460010755366350855], &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Top N Filter' datatype='boolean' name='[Calculation_1460010755366936585]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1460010755366801416] &lt;= [Parameters].[Parameter 2]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Highest Salary Job' datatype='string' name='[Calculation_889460978732318720]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF RANK( AVG([Annual Salary]), &apos;desc&apos;) = 1&#13;&#10;THEN&#13;&#10;    MIN([Job Title])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank for tile' datatype='integer' name='[Calculation_889460978738229250]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(AVG([Annual Salary]), &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1460010755366936585]' derivation='User' name='[usr:Calculation_1460010755366936585:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366801416]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366350855]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364597765]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364388868]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366084614]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_889460978732318720]' derivation='User' name='[usr:Calculation_889460978732318720:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_889460978738229250]' derivation='User' name='[usr:Calculation_889460978738229250:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Experience Level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='4'>
            <groupfilter function='level-members' level='[none:Province/Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1460010755366936585:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_889460978738229250:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_889460978738229250:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' value='auto' />
            <format attr='width' value='620' />
            <format attr='height' value='94' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='auto' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_889460978732318720:nk:2]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_889460978732318720:nk:2]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555' fontsize='12'>Highest Salary Job</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{11C520AC-A2DA-4535-AFD8-D36D00583429}' />
    </worksheet>
    <worksheet name='Highest Salary'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Avg Salary Per Job' datatype='real' name='[Calculation_730427617529802753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Job Title] : AVG([Annual Salary]) }' />
            </column>
            <column caption='Max Avg Salary' datatype='real' name='[Calculation_730427617529913346]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED : MAX([Calculation_730427617529802753]) }' />
            </column>
            <column caption='Is Highest Paying Job' datatype='boolean' name='[Calculation_730427617530064899]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_730427617529802753] = [Calculation_730427617529913346]' />
            </column>
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_730427617529802753]' derivation='Min' name='[min:Calculation_730427617529802753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_730427617530064899]' derivation='None' name='[none:Calculation_730427617530064899:nk]' pivot='key' type='nominal' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Calculation_730427617530064899:nk]'>
            <groupfilter function='member' level='[none:Calculation_730427617530064899:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Experience Level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='4'>
            <groupfilter function='level-members' level='[none:Province/Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Calculation_730427617530064899:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' value='auto' />
            <format attr='width' value='185' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[min:Calculation_730427617529802753:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='auto' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[min:Calculation_730427617529802753:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[min:Calculation_730427617529802753:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555' fontsize='12'>Highest Salary</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5AAD2058-71AB-4809-B3C8-45A0C9B912A1}' />
    </worksheet>
    <worksheet name='Pay vs Demand'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>High Pay or High Demand? The Experience Dilemma</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Annual Salary]' derivation='Avg' name='[avg:Annual Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;&lt;1 year&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;1-2 years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;1-6 months&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;2-3 years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;3-5 years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;5+ years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;No experience&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[:Measure Names]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' value='106' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='n#,##0;-#,##0' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='#000000' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='bold' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' value='#000000' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[:Measure Names]' />
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;All Fields&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[:Measure Names]' />
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;All Fields&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk] + [federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk])</rows>
        <cols>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</cols>
      </table>
      <simple-id uuid='{F725E520-4A1B-4C69-9FE0-9D671C5D8642}' />
    </worksheet>
    <worksheet name='Scatterplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Annual Salary]' derivation='Avg' name='[avg:Annual Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;&lt;1 year&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;1-2 years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;1-6 months&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;2-3 years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;3-5 years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;5+ years&quot;' />
              <groupfilter function='member' level='[none:Experience Level:nk]' member='&quot;No experience&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]'>
            <groupfilter function='level-members' level='[none:Province/Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='N' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3293370008468628' />
                <format attr='shape' value='circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='621' />
                <format attr='maxwidth' value='621' />
                <format attr='minheight' value='600' />
                <format attr='maxheight' value='600' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]</rows>
        <cols>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]</cols>
      </table>
      <simple-id uuid='{D4432CF5-A5FE-4AB0-85F2-8A47A0B37099}' />
    </worksheet>
    <worksheet name='Top Demand Job'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column caption='Vacancies by Job+Province' datatype='integer' name='[Calculation_1657043241563881476]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Province/Territory], [Job Title] : SUM([Vacancy Count]) }' />
            </column>
            <column caption='Max Vacancies by Province' datatype='integer' name='[Calculation_1657043241564016645]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Province/Territory] : MAX([Calculation_1657043241563881476]) }' />
            </column>
            <column caption='Top Job (LOD)' datatype='string' name='[Calculation_1657043241564114950]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MIN(&#13;&#10;  IF [Calculation_1657043241563881476] = [Calculation_1657043241564016645]&#13;&#10;  THEN [Job Title]&#13;&#10;  END&#13;&#10;)' />
            </column>
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1657043241564114950]' derivation='User' name='[usr:Calculation_1657043241564114950:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Action (Province)]'>
            <groupfilter function='level-members' level='[Province/Territory]' user:ui-action-filter='[Action1_8AF3CD63E291446FBA5AEA843B584351]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Alberta&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Action (Province)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='402' />
            <format attr='height' value='100' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1657043241564114950:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='14'>Top In-Demand Job: </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='14'><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1657043241564114950:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7D29B450-7009-47DF-8F8A-41BF727D9A5D}' />
    </worksheet>
    <worksheet name='Top Jobs (Bar)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.05' max='1.0' min='0.0' />
            </column>
            <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
              <calculation class='tableau' formula='&quot;Combined&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Avg Salary' datatype='real' name='[Calculation_1460010755363856385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Annual Salary])' />
            </column>
            <column caption='Vacancies' datatype='integer' name='[Calculation_1460010755363962882]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vacancy Count])' />
            </column>
            <column caption='Vacancy Weight' datatype='real' name='[Calculation_1460010755364065283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - [Parameters].[Parameter 1]' />
            </column>
            <column caption='Salary Index' datatype='real' name='[Calculation_1460010755364388868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363856385] / WINDOW_MAX([Calculation_1460010755363856385])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vacancy Index' datatype='real' name='[Calculation_1460010755364597765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363962882] / WINDOW_MAX([Calculation_1460010755363962882])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Combined)' datatype='real' name='[Calculation_1460010755366084614]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755364388868] * [Parameters].[Parameter 1] + &#13;&#10;[Calculation_1460010755364597765] * [Calculation_1460010755364065283]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Switchable)' datatype='real' name='[Calculation_1460010755366350855]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN  &quot;Salary&quot; THEN [Calculation_1460010755364388868]&#13;&#10;    WHEN  &quot;Vacancy&quot; THEN [Calculation_1460010755364597765]&#13;&#10;ELSE [Calculation_1460010755366084614]&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1460010755366801416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_1460010755366350855], &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Top N Filter' datatype='boolean' name='[Calculation_1460010755366936585]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1460010755366801416] &lt;= [Parameters].[Parameter 2]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1460010755363962882]' derivation='User' name='[usr:Calculation_1460010755363962882:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1460010755366350855]' derivation='User' name='[usr:Calculation_1460010755366350855:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364388868]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364597765]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366084614]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1460010755366936585]' derivation='User' name='[usr:Calculation_1460010755366936585:nk:8]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366801416]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366350855]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364597765]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364388868]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366084614]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Experience Level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='4'>
            <groupfilter function='level-members' level='[none:Province/Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:8]'>
            <groupfilter function='member' level='[usr:Calculation_1460010755366936585:nk:8]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:8]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='71' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755363962882:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='132' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='bold' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='11' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' value='Experience Level'>
              <formatted-text>
                <run fontsize='10'>Experience Level</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='Province'>
              <formatted-text>
                <run fontsize='10'>Province</run>
              </formatted-text>
            </format>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366350855:qk:7]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755363962882:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Job Title:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Vacancy Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</rows>
        <cols>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]</cols>
      </table>
      <simple-id uuid='{897B7EBB-F634-4E9B-936E-95076E0EAD3B}' />
    </worksheet>
    <worksheet name='Top Jobs (Table)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.05' max='1.0' min='0.0' />
            </column>
            <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
              <calculation class='tableau' formula='&quot;Combined&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Avg Salary' datatype='real' name='[Calculation_1460010755363856385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Annual Salary])' />
            </column>
            <column caption='Vacancies' datatype='integer' name='[Calculation_1460010755363962882]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vacancy Count])' />
            </column>
            <column caption='Vacancy Weight' datatype='real' name='[Calculation_1460010755364065283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - [Parameters].[Parameter 1]' />
            </column>
            <column caption='Salary Index' datatype='real' name='[Calculation_1460010755364388868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363856385] / WINDOW_MAX([Calculation_1460010755363856385])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vacancy Index' datatype='real' name='[Calculation_1460010755364597765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363962882] / WINDOW_MAX([Calculation_1460010755363962882])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Combined)' datatype='real' name='[Calculation_1460010755366084614]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755364388868] * [Parameters].[Parameter 1] + &#13;&#10;[Calculation_1460010755364597765] * [Calculation_1460010755364065283]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Switchable)' datatype='real' name='[Calculation_1460010755366350855]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN  &quot;Salary&quot; THEN [Calculation_1460010755364388868]&#13;&#10;    WHEN  &quot;Vacancy&quot; THEN [Calculation_1460010755364597765]&#13;&#10;ELSE [Calculation_1460010755366084614]&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1460010755366801416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_1460010755366350855], &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Top N Filter' datatype='boolean' name='[Calculation_1460010755366936585]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1460010755366801416] &lt;= [Parameters].[Parameter 2]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Annual Salary]' derivation='Avg' name='[avg:Annual Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1460010755363962882]' derivation='User' name='[usr:Calculation_1460010755363962882:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1460010755366936585]' derivation='User' name='[usr:Calculation_1460010755366936585:nk:8]' pivot='key' type='nominal'>
              <table-calc ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366801416]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366350855]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364597765]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364388868]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366084614]' ordering-field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Job Title]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Experience Level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' direction='DESC' using='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' />
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='4'>
            <groupfilter function='level-members' level='[none:Province/Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:8]'>
            <groupfilter function='member' level='[usr:Calculation_1460010755366936585:nk:8]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:8]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='264' />
            <format attr='height' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='85' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755363962882:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='128' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755363962882:qk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{72C525C3-E090-4335-ACFA-053DD37CD1E9}' />
    </worksheet>
    <worksheet name='Top highest paid roles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Rank by Salary' datatype='integer' name='[Calculation_1144477305129627648]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(AVG([Annual Salary]), &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column-instance column='[Annual Salary]' derivation='Avg' name='[avg:Annual Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1144477305129627648]' derivation='User' name='[usr:Calculation_1144477305129627648:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1144477305129627648:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1144477305129627648:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='52' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='#000000' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='10' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='c&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='8' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='#000000' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='8' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='#000000' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</rows>
        <cols>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]</cols>
      </table>
      <simple-id uuid='{913D4697-3F06-41AB-A62D-35D609036124}' />
    </worksheet>
    <worksheet name='Total Vacancy'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.05' max='1.0' min='0.0' />
            </column>
            <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
              <calculation class='tableau' formula='&quot;Combined&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column datatype='real' default-format='C4105%' name='[Annual Salary]' role='measure' type='quantitative' />
            <column caption='Avg Salary' datatype='real' name='[Calculation_1460010755363856385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Annual Salary])' />
            </column>
            <column caption='Vacancies' datatype='integer' name='[Calculation_1460010755363962882]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vacancy Count])' />
            </column>
            <column caption='Vacancy Weight' datatype='real' name='[Calculation_1460010755364065283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1 - [Parameters].[Parameter 1]' />
            </column>
            <column caption='Salary Index' datatype='real' name='[Calculation_1460010755364388868]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363856385] / WINDOW_MAX([Calculation_1460010755363856385])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vacancy Index' datatype='real' name='[Calculation_1460010755364597765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755363962882] / WINDOW_MAX([Calculation_1460010755363962882])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Combined)' datatype='real' name='[Calculation_1460010755366084614]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1460010755364388868] * [Parameters].[Parameter 1] + &#13;&#10;[Calculation_1460010755364597765] * [Calculation_1460010755364065283]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Score (Switchable)' datatype='real' name='[Calculation_1460010755366350855]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;    WHEN  &quot;Salary&quot; THEN [Calculation_1460010755364388868]&#13;&#10;    WHEN  &quot;Vacancy&quot; THEN [Calculation_1460010755364597765]&#13;&#10;ELSE [Calculation_1460010755366084614]&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1460010755366801416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_1460010755366350855], &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Top N Filter' datatype='boolean' name='[Calculation_1460010755366936585]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1460010755366801416] &lt;= [Parameters].[Parameter 2]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1460010755366936585]' derivation='User' name='[usr:Calculation_1460010755366936585:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366801416]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366350855]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364597765]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755364388868]' ordering-type='Rows' />
              <table-calc field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Calculation_1460010755366084614]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' context='true' filter-group='3'>
            <groupfilter function='level-members' level='[none:Experience Level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='4'>
            <groupfilter function='level-members' level='[none:Province/Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]'>
            <groupfilter function='member' level='[usr:Calculation_1460010755366936585:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='227' />
            <format attr='height' value='108' />
            <format attr='text-align' data-class='subtotal' value='auto' />
            <format attr='text-align' data-class='subtotal' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='center' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='center' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='auto' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555' fontsize='12'>Total Vacancy Count</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1251E1F7-E332-435A-9F07-2E3242BD9AAC}' />
    </worksheet>
    <worksheet name='Vacancy Map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Longitude (generated)]' field-type='quantitative' max='2955717.3203648068' min='-22507347.775161233' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Latitude (generated)]' field-type='quantitative' max='12701042.219797861' min='5224653.1780457273' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='6' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.60000002384185791' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' />
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' />
              <lod column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' />
              <geometry column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Latitude (generated)]</rows>
        <cols>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C7BFED99-2705-4BA5-AC10-C5408679D1D8}' />
    </worksheet>
    <worksheet name='Vacancy by job title'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
          </datasources>
          <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
            <column caption='Rank by Vacancy' datatype='integer' name='[Calculation_1693072034782928901]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(SUM([Vacancy Count]),&apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Job Title]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Vacancy Count]' role='measure' type='quantitative' />
            <column-instance column='[Job Title]' derivation='None' name='[none:Job Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vacancy Count]' derivation='Sum' name='[sum:Vacancy Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1693072034782928901]' derivation='User' name='[usr:Calculation_1693072034782928901:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' context='true' filter-group='5'>
            <groupfilter function='member' level='[none:Province/Territory:nk]' member='&quot;Alberta&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1693072034782928901:qk]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</column>
            <column>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1693072034782928901:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='55' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='60' />
            <format attr='text-format' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' value='' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='10' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='164' />
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='bold' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='10' />
            <format attr='font-size' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='10' />
            <format attr='font-weight' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='bold' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]' value='#000000' />
            <format attr='color' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' value=' Province'>
              <formatted-text>
                <run> Province</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' />
              <text column='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk] / [federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk])</rows>
        <cols>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]</cols>
      </table>
      <simple-id uuid='{0F0A56D9-ABED-4C86-9DAA-8FFD9251EF5B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Pay vs Demand Dashboard '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>The </run>
            <run bold='true' fontalignment='1' italic='true'>&quot;Where Should I Work?&quot;  </run>
            <run bold='true' fontalignment='1'>Tool</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f8fafc' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='border-width' value='2' />
          <format attr='border-style' value='solid' />
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#e6e6e6' />
          <format attr='border-width' value='2' />
          <format attr='border-style' value='solid' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Salary Weight' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range granularity='0.05' max='1.0' min='0.0' />
        </column>
        <column caption='Top N' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='Rank By' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Combined&quot;'>
          <calculation class='tableau' formula='&quot;Combined&quot;' />
          <members>
            <member value='&quot;Combined&quot;' />
            <member value='&quot;Salary&quot;' />
            <member value='&quot;Vacancy&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
        <column datatype='string' name='[Experience Level]' role='dimension' type='nominal' />
        <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Experience Level]' derivation='None' name='[none:Experience Level:nk]' pivot='key' type='nominal' />
        <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='62250' id='19' param='vert' type-v2='layout-flow' w='76105' x='667' y='36750'>
            <zone fixed-size='589' h='62000' id='20' is-fixed='true' param='horz' type-v2='layout-flow' w='75939' x='750' y='36875' />
            <zone-style>
              <format attr='border-color' value='#4e79a7' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
            </zone-style>
          </zone>
          <zone h='62250' id='21' param='vert' type-v2='layout-flow' w='22561' x='76772' y='36750' />
          <zone h='35750' id='61' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14750' id='63' name='Highest Paying Job' w='39583' x='19083' y='3000'>
          <layout-cache type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding-top' value='0' />
            <format attr='padding-bottom' value='9' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='14750' id='62' name='Total Vacancy' w='17583' x='917' y='3000'>
          <layout-cache type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#499894' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='0' />
            <format attr='padding' value='0' />
            <format attr='padding-top' value='0' />
            <format attr='padding-bottom' value='18' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='14625' id='64' name='Highest Salary' w='17583' x='59250' y='3000'>
          <layout-cache fixed-size-h='112' type-h='fixed' type-w='fixed' />
          <zone-style>
            <format attr='border-color' value='#499894' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='0' />
            <format attr='padding-top' value='5' />
            <format attr='padding-left' value='9' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='9248' id='8' mode='dropdown' name='Top Jobs (Bar)' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' type-v2='filter' w='22028' x='77429' y='3083' />
        <zone h='9248' id='9' mode='dropdown' name='Top Jobs (Bar)' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' type-v2='filter' values='cascading' w='22028' x='77369' y='13194' />
        <zone custom-title='true' h='9248' id='10' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='22028' x='77369' y='23305'>
          <formatted-text>
            <run bold='true' fontsize='10'>Rank By</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='10481' id='11' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='22028' x='77369' y='33292'>
          <formatted-text>
            <run bold='true' fontsize='10'>Salary Weight</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='8015' id='12' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='22028' x='77369' y='44636'>
          <formatted-text>
            <run bold='true' fontsize='10'>Top N</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='44250' id='33' type-v2='text' w='22083' x='77333' y='54500'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>Dashboard Guide: </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Rank By:</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'> Choose how jobs are ranked:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Salary</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'> = based on the highest average pay</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Vacancy</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'> = based on the number of job openings</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Combined</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'> = weighted score of Salary &amp; Vacancy</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Salary Weight: </run>
            <run fontcolor='#000000' fontname='Benton Sans Book'> Adjusts the importance of Salary versus Vacancies when using </run>
            <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Combined</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'>.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Example: 0.7 Salary Weight means 70% importance is given to Salary, 30% to Vacancy.</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Top N: </run>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Displays the top </run>
            <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>N</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'> job titles based on your selection (e.g., Top 5, Top 10). </run>
          </formatted-text>
        </zone>
        <zone h='3125' id='75' type-v2='text' w='37667' x='917' y='95875'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Data Source: Job Bank Canada | Visualization by Surbhi Parmar.</run>
          </formatted-text>
        </zone>
        <zone h='57000' id='3' name='Top Jobs (Bar)' w='40750' x='1500' y='38500'>
          <layout-cache fixed-size-h='441' minwidth='232' type-h='fixed' type-w='scalable' />
        </zone>
        <zone fixed-size='419' h='59000' id='13' is-fixed='true' name='Top Jobs (Table)' w='33167' x='42917' y='38500'>
          <layout-cache fixed-size-h='441' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='15625' id='100' name='Dashbrd 2 Top Demand' w='39417' x='19167' y='19125'>
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding-top' value='0' />
            <format attr='padding-right' value='0' />
            <format attr='padding-bottom' value='3' />
            <format attr='padding-left' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>The </run>
                <run bold='true' fontalignment='1' italic='true'>&quot;Where Should I Work?&quot;  </run>
                <run bold='true' fontalignment='1'>Tool</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='110' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='109' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='98' h='14750' id='62' is-fixed='true' name='Total Vacancy' w='17583' x='917' y='3000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#499894' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14750' id='63' is-fixed='true' name='Highest Paying Job' w='39583' x='19083' y='3000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='14625' id='64' is-fixed='true' name='Highest Salary' w='17583' x='59250' y='3000'>
                  <layout-cache fixed-size-h='112' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#499894' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='120' h='15625' id='100' is-fixed='true' name='Dashbrd 2 Top Demand' w='39417' x='19167' y='19125'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='9248' id='10' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='22028' x='77369' y='23305'>
                  <formatted-text>
                    <run bold='true' fontsize='10'>Rank By</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='10481' id='11' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='22028' x='77369' y='33292'>
                  <formatted-text>
                    <run bold='true' fontsize='10'>Salary Weight</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9248' id='8' mode='dropdown' name='Top Jobs (Bar)' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' type-v2='filter' w='22028' x='77429' y='3083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9248' id='9' mode='dropdown' name='Top Jobs (Bar)' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' type-v2='filter' values='cascading' w='22028' x='77369' y='13194'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57000' id='3' is-fixed='true' name='Top Jobs (Bar)' w='40750' x='1500' y='38500'>
                  <layout-cache fixed-size-h='441' minwidth='232' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59000' id='13' is-fixed='true' name='Top Jobs (Table)' w='33167' x='42917' y='38500'>
                  <layout-cache fixed-size-h='441' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='8015' id='12' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='22028' x='77369' y='44636'>
                  <formatted-text>
                    <run bold='true' fontsize='10'>Top N</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='44250' id='33' type-v2='text' w='22083' x='77333' y='54500'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='11'>Dashboard Guide: </run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Rank By:</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'> Choose how jobs are ranked:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Salary</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'> = based on the highest average pay</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Vacancy</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'> = based on the number of job openings</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Combined</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'> = weighted score of Salary &amp; Vacancy</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Salary Weight: </run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'> Adjusts the importance of Salary versus Vacancies when using </run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Combined</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>Example: 0.7 Salary Weight means 70% importance is given to Salary, 30% to Vacancy.</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Top N: </run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'>Displays the top </run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>N</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book'> job titles based on your selection (e.g., Top 5, Top 10). </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3125' id='75' type-v2='text' w='37667' x='917' y='95875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Benton Sans Book' italic='true'>Data Source: Job Bank Canada | Visualization by Surbhi Parmar.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C5EE7595-8A4D-4C1B-83EE-CCF7E0D42C33}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Vacancies by Province and Top Jobs'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Job Bank Dataset (Job Bank Dataset Final)' name='federated.13t9dzv09mc5kl18k231o0wjdvg3' />
      </datasources>
      <datasource-dependencies datasource='federated.13t9dzv09mc5kl18k231o0wjdvg3'>
        <column caption='Province' datatype='string' name='[Province/Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Province/Territory]' derivation='None' name='[none:Province/Territory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='66' param='horz' type-v2='layout-flow' w='98666' x='667' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98666' x='667' y='1000'>
              <zone h='46125' id='3' name='Vacancy Map' w='98666' x='667' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51875' id='64' name='Vacancy by job title' w='98666' x='667' y='47125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8250' id='67' mode='dropdown' name='Vacancy by job title' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' show-all='false' type-v2='filter' values='cascading' w='21083' x='75750' y='25125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='16375' id='74' name='Top Demand Job' w='34500' x='62500' y='5875'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='92' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='91' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='280' h='46125' id='3' is-fixed='true' name='Vacancy Map' w='98666' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='129' h='16375' id='74' is-fixed='true' name='Top Demand Job' w='34500' x='62500' y='5875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='8250' id='67' mode='dropdown' name='Vacancy by job title' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' show-all='false' type-v2='filter' values='cascading' w='21083' x='75750' y='25125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51875' id='64' is-fixed='true' name='Vacancy by job title' w='98666' x='667' y='47125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FD944E6F-5C7F-4981-B1A8-BBBA04F3A5DE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Top highest paid roles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{11829121-3A32-4DDD-95E3-6CE1CBAA03D5}' />
    </window>
    <window class='dashboard' name='Vacancies by Province and Top Jobs'>
      <viewpoints>
        <viewpoint name='Top Demand Job' />
        <viewpoint name='Vacancy Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Vacancy by job title' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A5DF655E-7A99-4214-B3AE-A829FB63BA4B}' />
    </window>
    <window class='worksheet' name='Vacancy Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{5647C14B-ABD9-4785-8167-0CA021BD83CA}' />
    </window>
    <window class='worksheet' name='Vacancy by job title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='dropdown' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' show-all='false' type='filter' values='cascading' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EADE72C2-68D8-4302-86C5-B47C3EC21ACD}' />
    </window>
    <window class='worksheet' name='Pay vs Demand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[:Measure Names]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20F2759E-4386-4AB5-9673-21904C0579F1}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[avg:Annual Salary:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_813181262530080770:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0E6A4CB-7602-44AA-8F76-F4FCAC1B4CBE}' />
    </window>
    <window class='worksheet' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[sum:Vacancy Count:qk]' type='size' />
            <card mode='dropdown' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF07BC55-DAA0-4464-A8A2-4A13287FA436}' />
    </window>
    <window class='dashboard' name='Pay vs Demand Dashboard '>
      <viewpoints>
        <viewpoint name='Dashbrd 2 Top Demand' />
        <viewpoint name='Highest Paying Job'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Highest Salary' />
        <viewpoint name='Top Jobs (Bar)' />
        <viewpoint name='Top Jobs (Table)' />
        <viewpoint name='Total Vacancy'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1258B2A0-59F6-4AED-828F-D4F1874C230B}' />
    </window>
    <window class='worksheet' name='Top Jobs (Bar)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]' type='filter' />
            <card mode='dropdown' param='[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]' type='filter' values='cascading' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:3]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:6]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0974E518-1313-4856-9A7B-1CBFB03A08FF}' />
    </window>
    <window class='worksheet' name='Top Jobs (Table)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Experience Level:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:10]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFC66627-0817-4EF4-A959-CDB40F7A6F4A}' />
    </window>
    <window class='worksheet' name='Top Demand Job'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Calculation_1657043241564114950:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:2]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1657043241564114950:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_889742454711173120:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6279DA45-241D-42D8-97A6-CAFA28AB2937}' />
    </window>
    <window class='worksheet' name='Dashbrd 2 Top Demand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='32'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Calculation_1657043241564114950:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Province/Territory:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk:2]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1657043241564114950:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_889742454711173120:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F814D75B-D1BB-4A71-95F4-AA626C638C1D}' />
    </window>
    <window class='worksheet' name='Total Vacancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCA1C79A-60E0-47B7-9D32-FFE71FF40F27}' />
    </window>
    <window class='worksheet' name='Highest Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Calculation_730427617530064899:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A53106E-7C75-47BD-ACD7-E876085B26DC}' />
    </window>
    <window class='worksheet' name='Highest Paying Job'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[none:Job Title:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_1460010755366936585:nk]</field>
            <field>[federated.13t9dzv09mc5kl18k231o0wjdvg3].[usr:Calculation_889460978732318720:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7B4495F-3AF5-4354-9220-5BF3D234E53D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='96' name='Dashbrd 2 Top Demand' width='192'>
      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
      xKWRApC4NP8F477c/IWSkGoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Heatmap' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd3gU5RbA4d9ueu+99wRCGiRU6UUBRaWoYC+IomLFrliQonBRQAQEKVIV
      6b0FAkmAEJJASA/pvSfb2/0DjZdLolioO+/zwLOzMzt7ZrJnd775znwj0ul0OgQCPSW+2QEI
      BDeTkAACvSYkgECvCQnQGa2GluZmmn/9p1Rrru/76bQoFEraG2Q6HSqlAu1faKJdSk8kNbe8
      w3l5546RVdbYPq1VK0k+dpzW671dN4tOh6SliarqGhSqzrdRSIDONBfx7FOPEOLjz/0PT+Lo
      hUoAtBoNWp0OtUJGq1TR/oHV6bQolar2xwr5/3x4f513eUpHS1PDFX8UnVaDpqWcxya/hbT9
      WS1zXn6JtMrm35/RqNFelQ86pK1NtMmUpOxcw/YTF66ar1IqObFjGfEXytvjUSnlnD5xEola
      e+XSOh1tzY3IVeor49Pq0KhVKP/n+VtZTvI2hg0dwdQXnmfzsSx0Oi2NDQ2of92BGpWChqYW
      RMJZoD+gqGVMvwf58kgCLq0ZjH/2XZy1hjz98TR+mL+U6rpyJrz9DdJDs9idq6WuKI8Zq7eS
      8NXrlBvYENxnDMGNx1h+rAhlczVPz1iCyfl1rD6Si1JjxroVM3n84ddw91bj7tWF5T9sotfo
      h9m4eA6S3AP0HfE07tH9mPHyeD74ejOeZjJGDRtCmVEUo5zPszLXiYlBzby/eBcxvUYSZXqB
      XIdBNCVt5fEZi4n1d+D45q95b+FWJLUFTF6wlcKlb9LkHIpX9DDO7V7L668+xLJdlSx8MZYn
      5+xl2nBHvvklDZVCy7eL3ue58a9i427G6HHj+fH7dTg6WfLG3NV09zK72X+dP/T2hMEEP/c1
      Tw8NR6OSMm/68xwrbMHIJpAVX7/Giw89hszYRPgFuFZajYqK/AKemTWf7oF+REaE4GxtRPK5
      bKStzTz02hyeG9OdssoGWptbEVu5MCAuErlEwojHp/PtR0+zf8dR1h04xffrNjOmq4Y9yQVU
      1ZZw35TZfDr9ZcKi+7N55TyszQxxixjBmLg45i5dRpyfNaVldbzxxWK8TCVIpErUCimtEhnr
      Nm3ig29W8dVnUzEF1syZjjj6Ibr7OQDw4+YtfPLdRqZN7A/oaG1uxCV6NC+P60tTUxPuQZGU
      X0jiRPJxgrpFsWXlRvy79cCktYgT6YWUl5Yx8bXP6eVtRmurnNAeQ/CxN7qpf4trUVMvw8PN
      AZFIhKK+iB25CrZt24qXOpMt61ahjXiATWuWCgnwV1j5hDMoOoCzO1eQo3FnUFzX9nkGYjEi
      kQi0Oh5542PGxzry/sffoEBHcV4mh+MTcfH1wMnUmJNJiWTkVuPmbI2FlT8D+0dhYmyIuLma
      xLMX23+mjYzlnElOoUWmxj0khu5d/DAyEFOUe45T6bkAeLu4cOLYUc6kXkClhaFjxpN5eCu1
      EiUAtubmnDuTTHZhZXusw+++GytzEwBMHHzp49HKl9/HM/KeAbh62CIytubRF16jR4Ajtq6B
      9OsRjpVrCHO//JiKE+vZfCz3Ru3yv+3e+/qw6Kv/cOjQfrLKJJjLmjienEhxjYLAkGCqctNJ
      TD6JwYwZM2bc7GBvZTqRIeHdYzA3AANjS7pHhWPn5EJu6hns/boSERFJiJcz3iGRuNqY4u4b
      RMm5Y1woa+XRZ55BmnOCpLwanAOimTb5EQbGdWHvjt0ED57Iw0OjERma0b1HN4yNLfG21ZCU
      WU7vHlEYisX4+LmSlJRCaFQcDo7O9AgPws7envysNBz8uhId052Hx43hYtIRKloNiIkKI6Tn
      3QwNs6BeZ4e3sy2hIf4kHz+Jb7cexMTE4m5vSXBULLamIhAZEh0dg4+zHa1m7owf0Z+evXtx
      PjmBmhYl0bFx2FjaENO9G+qmCnbuOYilTwxPTLgbc6Nb+7szKLovFpIiEk5nEtJrGPf19OaX
      bQcYNvElRg8fhrOmjKMpRVe2ARoaGhCaBP+u4z8tp8VjAKP7BN/sUAQduCIBtFrtHy0ruM7u
      nTaWNp+/flqyhyKUL9+dfR0iuv1NmT6ZaqOyTucb/u+EWHxr/6zd6TRaDRrdX08AjVYr/O06
      YeVigXOv0E7nC3tNoNeEBBDoNcMOn9XpyD93nI07juAd2Z+H7huMiYHoikWqi7JRWnjg5WTV
      6cqTtv9AliiYp+/r+68GLbh+dDodpaWl5ObmMnToUKRSKZs2bUIqlfLMM88QHx9PcXExOp2O
      fv36YWpqyq5du/D29ub++++/7Q7FOoy2rSKdSZPfwSM0gmM/fMKCnxK5lJXC6TOn2b33AI1N
      jSye+Tqzv11LflkdF07Fs2nTT1wsqkZSX8a5rAJSTydjZu+Bp7Md8tZadvy0nn0Jqe3nuAW3
      pqSkJN555x0KCgrQarXMnDmTsLAwcnNzKSoqwsPDg8DAQA4ePIharWbevHmMHTuWLVu2IJFI
      bnb4f1mHvwA5p4/jHjuaJx8eS4x1PR9vPYLuWDwp9EKcF0/VizOpqmumgSLqmpooPX+Bqvoy
      Fq48xNev9+DBaYvoN2QkIz2VnLPoS9YvX5BrHEHLqmU0v/89D/UJvNHbKbhGPXv25ODBgwwb
      NoyzZ89iZ2dHXFwcP//8M/b29tjb27Nz507efvttXF1dqa+vZ+nSpUyYMAFLS8ubHf5f1uEv
      gKmZGW1tbWgBqaQNY1NzAIY/9Cwje3VDaWTPoNhQBox+iFg/SxJOn6NFK0LdUI9aA54xo1i1
      8AvsTC+vL73gEk8+N4WH7+3N2QuFN2rbBH+DRqOhpqYGLy8vDhw4wIgRI6ipqUEsFuPg4MCP
      P/5IaGgokZGRLFmyhHfeeQdHR0eMjIwu94TfZjpMgLC77sOhOp7Hn57CW1/9xFNPj7tqGWd3
      LzYsnsWhhFRSc4ow/J+Nt3VwxED8+/TQXj354v03WLgxkWG9w6/DZgj+DUeOHGHu3Lk0NjZS
      UFCAWq1m3759zJkzhxdffJHExETq6up44IEHkEgkpKWlUVRURHFxMbGxsTc7/L+l02pQSVMt
      2fnF2Ll64evhTGNNGQZWroikDehMbbE0UpOXV4ijpz+yulJUJlaYaEU4OJhTL9Hi4WKPpLEG
      GWbYWRiQfeEiRvbuBPm4Ib4NvyluhLun3keb79/oCJOHseDDr/7x+5eWliKVXi7IdnV1RSQS
      kZ2djb+/P46OjtTV1WFpaYmpqSk6nY7i4mJaWlrw8fHBxsbmH7//9fDGl9Mw69X5563js0CA
      ha0T3Xs4tU87uHhdfmDu8uszJoSFd7v80PbKjgbPXw8FLe2c+e2oMDymx18KXHDjeXl5XfVc
      XFxc+2NHR8f2xyKRCF9f3xsR1nV1e52zEgj+ZUICCPRap4dAghtP3iCjUd70l1+ndhFOK3fG
      zcyTyqRrLIYT3Fw/L9yAWv3Xr7k1M7u1L0+8mcqry6gUlXY6X0iAW4ijoyMnTpxg9roFiAyv
      7ej0oT5jePSRSdc5stuX2AoCel3duP+NkAC3mIaGBgqtqjE0N76m5Strq65zRHc2oREs0Gsd
      JoC6rZZfft7Exo0bOZ5yEc3/dJW1lWXw6YKVyGRScgsuAXB69zo2HDx7xToKTu9h/uoDV627
      ta6EDWtX8/PuIyj+73A3cecK1h3KuKbAW8rO8+6X37VPl2Uc5uuVO7lDh3m6aZKTk9m4cSMb
      N27k/Pnz6HQ60tPTKSoqAuD48eMsWbKEo0eP3pZXFHaYAIqaHD6Y/z31dTW8/fRjnC6sIjM7
      h4pLeTSqDPFycaEkPZ4nX3yF9Iu5mNs54GRrSUtdOSdPJJCefYmGinziT6RwKvEkpbUtAGgk
      1Tw1YQLpZc001ZYiV2nISj3JvsMJNMtUlOWe4/ylGiqKsmmSaagoLqC2WUZ+dgYZ51JIybjI
      xfQUUi7ko2ytYf+xY5xNPklheT2mFna4uNihbK0n8dgRjiWlIVfffn+QW42hoSGWlpasX78e
      jUbDkiVLeO2111AqlajVapRKJUOHDmXRokWoVKqbHe5f1mkbQKfTIpM04961O07iFsY9cjfe
      jl2Y8saTrFp1GOeJgVSXlXL4xGk8Wk+RanE3x5Yspdk9Dn/fAHo7QMGFRNZ8d4pWz+Gs+WIq
      5ZmJVFlHsfGdVzAUQdGpLTz/0Qb6Bpmx7UQeg3/tNl7x+WRiXttF2qJ3cL1/Bjs+G4VbzDiO
      7t3NqHvvYceeC+zZ+h5tFfns3LaOA6kSFr01kB921tDPT8Shk2dIO7yF+z76kScHCBej/xMx
      MTGsWLGCyZMnExERQVBQEFlZWe29wOXl5Zw8eZKpU6dibHxt7ZZbSadtABMrB7p0jcBMWkZJ
      rQTEVizevIU+QZfLI3oOGoZ/1when/wopgaXXzNo2FBKM1PILq5Fp9PRpddo3pg8Aa3icp24
      obExGpWy/ZAqMzmJgeOf4603XiL/fELnUZrbM2XaW/i4u/LS69NwNQY5YOMbxYzZ83BSZ9HU
      dvnbp6a8mKrKagwMoaK2ufN1Cq7J3r170Wq1jBo1CrFYzPnz5+natWv7hz0oKIji4mJcXFzu
      nGpQAElNMUfjj1Fc3Xh5jEsrR1ytf89wI1ML5KWZfLNqG8pfjzSqmuQM6NeT1OQTyDVX19i5
      dbmL3rbVPP70FN7++As8YvpxfPMyvpj7NcFRA9qXM7ewZMX8GcSfzf/D4BUVWXz45qvInPvh
      aHV5tLLzJ48jM7bGwuT2+za6leh0OnJyckhMTOSpp55CoVCwb98+Fi9ejKGhIampqfz4449I
      JBKsra1xd3e/2SH/LR1Wg2rkrZzLuDxCmaO7H35utmTmFRAeFoZW0UrupTpCQ30pzj5PrdwY
      f1czpGIbDKVV5BVX4+obioc1VLSI8HYwoKxBSaDP5R2klDaTlpaB2MKJyPAgCi+coaRBR6/e
      PVA2liExsMda20hGQTVOdpY4uPvRWJmPp18oJYV5+AUGUJBdiF+QB6XFZdTWNREUHo2NWMKl
      ehXetmJSLxTg4uKIhYMHHg6310UaO3bs4J0TX17zadDH7Efy1itv/Otx6HQ6KioqsLa2xsrK
      CoVCQUZGBhqNBkNDQ3x8fMjKykKn0xEREYGdnd2/HsO/4Y250zDt1fl8YXDcW8ytkgB3ij9L
      AKEfQKDXhJ7gW1DzxVrExgbXtKy2n9Dz8U8Ih0C3GK1W+5cK4gwMDDAwuLZk0UefffUJFcrO
      q0GFBBDoNeEQSHDHW7thDTk1mR3OExLgFvTJ7M/4MXnrny4X5x7Bum9XXf+AbnOVTeW4Du14
      BEMhAW5BSp0accCf91+o7tQ7PN5AnZ4GbasrYce27VQ0KdDImpkzZz411QV8vvD7a1pxbUUp
      rfLbrzhKcKWmpiYOHjzI/v37qayspL6+nq1bt7J///72xnpZWRnx8fF3TjUoQPymxXz+6ccs
      356EViVj2/bdtDZXsWXPPgpysqioa0an03IpO52U9GyUai31VRU0NjZQUlrKl2+8wpb4FFql
      MkoKsklJTaNJoriR2yb4F6xevZra2lrMzMwwMDBg+/btuLm5sXbtWiorKykrK+PLL79k+/bt
      NzvUv6WTQyAthxIz+PjT6SxYfwDV/b+P+yOryGHxgi9IyhexdMYDvPOfHQSYN9F1wgdcWvUG
      yfUiovoPJfV8Jrnr19DF04aDG9bRXJdHsd0gNsx+Qeh9u000NTWxYcMGxo4dS+/evXFycuLJ
      J5/k559/pkuXLlhaWrJ48WKCgoIICgq67UaGhk5+AVR1Fzl0soDt++PJO32Qyubfv7nNvbox
      79vleIuy2bvtAEqtAWY2duTmFwA6xk6by4IZ7zE0JpLJb75PhLsZLZIWNDoxpcUlwgUrtxFr
      a2sOHTpEcHAw3333HXl5ebz33ns4Ojry0ksv8corrxAcHMzBgwfx9va+2eH+LR0mQMbJo4Te
      PZGpz07lgRgbEi78flW9uraQ/8z6lCqjLgwcFItM0oxXcCT9ogIBI3y83RCJRNjaitm0aiWn
      kk9wprCZ0IDOL0wW3HqUSiUrV67kzJkzJCUlMWzYMKZNm4avry8tLS1otVrefPNNjIyM8PHx
      wcXF5c9XegvqsCOsovACbcbuBHvaU1F4gWaRHU1V5URGBJGTnUN5RS1dY+/C19mKc0lHKamX
      ExHbB1VlPrYBEbjYmNJSW8KxpDS69+1PzukTWLl4oBKb0zMqRDgE+hPvz/qYn+uO/ulykWof
      Nn+99rrEoNVqOXv2LGVlZURERODo6EhycjJarRYzMzP69u2LkZERtbW1qFSqW7oceu6SWZj3
      7/jYQ+gJvgXdCglwJ/mjBBD6AW5FOh2a/x8xoKPFRMJ31z8lJMAt6KHR44jOjfjT5VxdXW9A
      NLc/Vxt3cg52XAohHAIJ9JrQHhXoNSEBBHpNSACBXhMawbeo3Xt2s+3UL53Oj/PryXNPTr6B
      Ed3+KioqiI+Pv+K5ThOgsaqI5DMZOAeEExXmh0EHgx7lnznIuUYbhnSxYEt8Cc89es+/HrS+
      qqgoRx7S0un8ssrOx7z/N1VXV3Px4kWMjY2Ji4tDrVZz4sQJHB0diYqKor6+nnPnzuHl5UVI
      SMgtPThWWloap4wPY2Fv3v5ch4dAyqYiHp/wMHsSknlv8kQ2JeQgk7SgVGuRSdqQK9Uo5c2c
      ziimR3QY0pp8Nm45RHVVJW0yJTqdhsriAorKa9DqQK2UUZCTRV2L9IZtrODfce7cObRaLQsX
      LiQzM5MvvvgCqVTKzJkzqaio4JNPPkGj0fDhhx+iUNz61b4GRgYYGhv+/q+jhXIS96MNGs7X
      cz/l7NZvmL1hOyUbDhDy/GbyVk7FathbVG7/nGbbQNYdepf5rw6l4uIJpj2fTpNjH2ZN8OHD
      lUmYtZbwzKwVpC1/jZRWR4aNfpDnxw+/0dss+AdcXFzIysqiV69e5OfnExwczOjRo9mzZw9N
      TU1oNBqqq6sZPXr0nTM2qFqlQiQWIwIMDY1A93/dyPJyDh+7hLWtLdKGcmolcjy6DWT96qXI
      MzPZdnAnJjb2uDlbkXbmCMdTFHzz3bdMHjfsBmyS4N/U2tpKcnIyrq6uJCUlMXjwYLKysvD0
      9GT//v0MGTKE1NRUunTpcueUQ4f1GUpT2k7mfbuczxesZviYkRgYGrH3px9ISi8EE0d8vIwx
      snTigQfHYGdiRF3JRZYu/R6dpxfdg7sglamIvmsEvaK64+8uZcWylexOSL3R2yf4m6RSKbt3
      7yYgIAA3Nzfs7OyoqqqirKyM5cuXM2zYMM6ePUtMTAw6nQ43N7ebHfLf0uEhkKlTKD9vXMmO
      g4kYmJiCUs6j02ZzIDkXr0Ez8QoLY/zq1ew9nISFawAewX58/YU1RRU1rFlyH972hhg7bKNK
      Ar7e3sxetopdew9jZdnxhcmCW49YLEYqlbJ3716GDx9O9+7dcXJy4syZM0yfPh1XV1cmTZrE
      sWPHmD59Op6enjc75L/lT0ohdMham2lRgLOjLbdu+/7Os+z7ZeyVbOt0fld5NJ+/PfMGRnT7
      y8vLY9fBHYjEv3+ShVqgW1R5eTm5ubmdzvfw8CA4WLj5xz8lJIBAr91+zXaB4F8kJIBArwkJ
      INBrQgII9JpQDXqL0mq17N+/v8N51tbW9O3b9wZHdGfq8CyQViWjqKQcO2cP7KxMqCwtRmtk
      g7urfad9ATqdjsM7thA+eBQWWgWmljYYGVy5dG7KYcrEvgyOCbge23JHUSgUxD7dE/doj6vm
      mRQZsX1R530E/3YchYWFKBQKwsPDUSqV5OXlYWxsTEhISHvvsJubG56enrd0NShcHu+ouLi4
      fbrDQyBZ6Vn63NWTmct3o5NU8MSY4Tz95mJ0Oh0KaSvNbTJ0Oh06nQ6tRoNcoQSgobYGpVrO
      nBde4EK9Ap1Oh1ohobquEZ1OR2bibnYlZSOXK9pf39rUiFypRjgbezUjMyNMbU2v+mdgcuPu
      CLNp0yZOnTrF3LlzSUtL44cffiAzM5MPPviA4uJidu7cSVFRES+++CJKpfKGxfV3FRUV8dHa
      t1h6ah5LT83r/BDII7I/lTmnKM00IKD3MKqaoSr3JO99vISiS5k8/vkqzn79JPkGQRTl5LBi
      VzybN67FzNWW9YcOc/zRp/j0k+f59LV3sLK3wLv/kww2h0PrF5C07E1Gv7mEIRbZLNyaRHZW
      Id9v3UW0l82N3BeCa/Doo4+SmZlJeno6ISEhxMTEcOLECUJDQ3F3dycmJobc3FzGjx9/21SD
      eoa6ERjjC/xBI9jUzgNXRTXbEzLo2bc7AAbGlvj6eeJib0HWhSJEBka8OWcFY/sH09wmA8Aj
      agijY6KZt+YHLMuT8R/9AutWLORMwi4Ahk58jS3LP+bQ8WOYO7rh6eaEmaKNkpqm67zZgr+q
      ra2N+fPnk5CQwIwZM9qvAygtLeX9999HJBKRnp7Oli1b6N+//y1/+NORzs8CiU0YEOPEyr3Z
      RPo6AnBix/dUm/kTGejR3hYQiUT/t+EiTMxk7N91AGNnX/JOxbNzz24sbS4XSxWcP8W6zbsJ
      9A1g7dIv8YkZgqe9UCR3q1GpVEyfPh0HBwe6d++OWq3mtddeIzQ0lJCQEGpra7lw4QIjR47E
      3d39tr1Rn8GMGTNm/P+TIrER9k6uDB3YFxfvLsRFh+Lk4kb/gQOouZRHSOwAoiPCCQv2IzAs
      HDdHO/yDgvFycyasSwQ9YiPIyy0gduiDdHNScrFMzVtvvYybmwfOFloUFoG88cLDdAkKICev
      lIHDhxIe3gU7C5ObsAtuTRqNhhV7VmLjefVhoagOHhrx0HV9f7lcTkNDA0qlkrq6Otzd3dFo
      NEilUlpaWvDw8ODo0aPk5OQwadIkfH19b4tfgLa2NvbvOYCkQkF9XotQC3SrUqvVfDTrI4zM
      ja6aZ29uz7QXpt2EqO48QgII9JrQEyzQa0ICCPSakAACvSYkgECvCQkg0GtCNahAbzQ1NZGT
      k3PFc50kgI7Wpgaa2+TY2DtgZW7a6UoLM05Sa+RDz7Crh8XQ6bTI5SpMTU343z6S0szTlGqc
      6BPh97c2RJ80Njai0Vw5MJm9vf1tOQjVzZaYmMjWsnWY25i1P9dhAtTlJvLQc+/i4uaGW+xo
      5r3xKAppGxoDM8xNDEGnRa5QYWxsTMrBjaRaj2lPAK1GRatEjpWVJYrWPKa+sJJv18zB1ECH
      rK0FlciUzGNb2SeNo0eoB4ZGxojR0dLUgLGlHaZGHf9hdTodkrZWjM0sMDY0+PW91Gh0IowM
      b89u+Gtx9zOjUDtr26cbCxs499MZbGyEwsG/w8HbDisHy/bpDhOgqaoYiciBZ6a9Q2xkV4pS
      9jD9q3VUlVzi/UU/Er/kbYrk5vhHjSASUElqmTJxAs/N/g+7Zn5Idl0lIt8RDPcoZPf+bUx+
      yYopD3ry9ufr6dJzGCN9If7nxQz96RNGTJ1HlDKRVccKkbTqmPX+w3z2bSIfPuTHs/MT2Pn1
      I0xbns7zscYs33WKospmVq1fyrR7h2Du6k9OsxWnj27AwuDO/Ea0cLHEpJtF+7RWI/Rb/ps6
      /NT493mAj56/m28/eYWXZizFyNadroE+2Bi1kZFbhlIpR2RqR59el2/ktuE/72MS/SAxHnaE
      9YjEy8OVrBNnuefpycRGDGPponfYtXoF07/ZwHdz3sQE6P/gCyx45xFKK6vZvOUn/AJDMazL
      oEjhTG1pBqezigl31/DzruN0jYzD1TcIPy8PVI1lXKpqRGloy6LlK3ExkiEXOrMFf1OHCZB/
      9gS1ImeeeGIcxRmZ/LT0G0TePYgJ9kCHiDFPvMKEfr589MV8AAbdN4Hzh7dRmJ3KtzuSePC+
      YZgaiBCJjGhpLCQlPR8fP1/iD+zh5MlUFFweeu+3EbpcnVwRW9jzxEtvEREaSF/nNrafaeCB
      IRF8u2YfI4Z049s5M+k66H58XWwBEInEiEUiuA0KsAS3rg6rQQ0NtJyMP0JBjYY33nuDHuF+
      pKemEhzVm4iISBoLUrhQ3MzEx58i2MeVoB7DGBnpQJOJNz4mEmrUVsRGRdI9NhZnCxkXKxQ8
      PflZylLjKW6E2LhuuHr4E+jlhLWTNxPGjCAnLYV6qZgePWMJ8HbFwi2EkYPjUJu6MWZQHB7O
      tpw9X0CPnnFER0XhYG1FZHQUpqamREaEY3SHJsKWn7egbFKgrVWjrVWjq9Xw+AOPYmIiVM7+
      VXl5eRSL8jAx//3CHaEYTqA30tPT+fnQJgz+56SJkAACvXZnnjoRCK6RkAACvSYkgECvCQkg
      0GtCAgj0mpAAAr3WYS3Qb8MW/jbMhU4HYvFf7GjS6dBq1UjlKszNTP+wevG3M7EikYjCrHTM
      XAJws7fsdHl9otVqr3pOqAT9+86knOF8xvn26Q4TQHrpJF4xo/j4hwOMsM5m7m4JK+e/iFza
      ilZsirnp1UN1aFQK5GowNzNBBDSWZfDopCloLazx7fUgSz5+HrVSjkypxdLSHI1KjlShxdrS
      nJLU3Sza08iXHz7Gmfi9uPWbhKudOVKpDFMzcwz+avLdQQZM6IfY9fckCDEJZ9m8729iRLe3
      hJRjGPaVtk93ekGMW3gUBzasZtDkngDkndzClA+/Q2xgzAdfzWTlZ/P4YsVSZr/yHE+89Qrf
      zviKyqY6Jry1gKdGRNJYnke9zoNF8+YQ5OVKc0kak55+HTvvQD56/02mT30BhU7M8Kc/oG7v
      HDYca8TAQox9RSHmPTSsmjOd/amFtJgHsnXFbEzu0GrPP+Pga4tjr99Ln81zzf5gacFf1emn
      ytYniqdirVi45SSgZeMP3/L8nB+ZNWUgK7enEemjYucv67mEO7aqZmwCIxjUI4CTx9MB8Im5
      h/98/gIXj27ixde+YsuGFcQ88gFrViyl6sQmPAZOYcOKWexZvZKHn3qRgaOeZ/brk2iuraZN
      LqeuRc6QESMpv5BCo0rTWZgCwT/S+SWRIkPun/Iyc7p2wW9cFP0GDmbu3Hexko4H5osAABUo
      SURBVBZzz7T59DQUcf8zH/LsrE00FidysbAUsWU9ul9vGJ6btJt5S3djK2pDahXNgCHDWfvO
      fN4tSmD8PT1J/+FrPsqzwq/nPdjaO5KT9C0rd0RefrFOyakTJ+lm7opcrd+VGtJGGbX56vZp
      Y4lwIcy/qeMbZCglXKpuwd/TlfKiPLSmDng5W3I+LQ21sR0R4cHoFK1kZmbjHRqFtaGCzAs5
      2Dg5Y2RsiYerHWqFlPz8PCQKEYGhoVibGVF+KYfaNg1hYWHUXrpASaOayKgILIx0FGRnobV0
      wVokx9TeFWnNJerlBpibGOHt64ORnrYDsrOzUalU7dPW1tb4+PjcxIhub/MXfsWF1rPt00Ix
      nECv6WfLUiD4lZAAAr0mJIBArwkJINBrQgII9JqQAAK9JiSAQK912BOsltSx9+hpYu8ahIWi
      htwqDd0j/K9phRqVjGOH9tIkAxtnXwb0jcHwX+zDWr94DuH3PkuEt0P7c4vmzOCep98kwEmo
      IBX8sdbWVg4ePNg+3eG4QLKyVAaPHkebZShBojwW/JTFvYPDOZ2YQGWzGhc7UwpKarC1NCQ3
      vwQbG0uKSsqws7NF2VrLM889iZO7Hz8umolJ6DCsVHUo5VIa2xTUNDRhb2VMfkEZpsZaLpVW
      UHqpELWhOSbIycjIoLJBirmhivo2DSJ5ExWNUiwMlJTVS2mtLccloCtG8gYSE5MRWTiw8j+f
      EjlsLPL6SqxsbO+o6tGGhgZmLZhJQspx4hOP4mTjjLOz880O67ZVXFzM5qyViIJlNFtXd14L
      5NNrKAUHN1MfOhKA/atmsinbBHX+SZ768FPmvP4F8+c+ydAn57F30yxmzPmJbeu/BkAkFmMo
      1mHjHkKotxmvjutHg3kAzzz1BEt2J5K0/CWemPgeC74YwyPvrGVYhA01pr150DuP3WUOBLp7
      MKq7CYsOyhliV8CPBYZ8OMSefW3RNB5azQNhdzHn/aew7343g8zdAB1p+9dwPFvDyvlv3ZAd
      eaO0tLRwRp6Ie6ALsmY5ly7F0rVr15sd1m3NxNwYc6vLVbWdtgGMbbx5+h5vvvs5EdCQmBCP
      Si7F0sqWsjoTQjwVbN1+lImj+rBz224C4ga23zxbbGyOt48/dgZy8ktrwcCUD79Zw7iBIVe9
      T0DscN599VkMJDK69RqMrCyTotJKfMN7UZF3iswWM/rYK/jlaCoD74oDQNNWxKUGbz784D3u
      6RMOsho+nrmEp6c8q7dl04K/5w8/LXc/9iIXDmxEggGxPfvQ1NxKQHgUgV6ODOgewspd2Tz6
      UD82bNrJoLt6tL9O3dbAmTNnKKmsRiZXYWBijqujLQZGxsgKzvLpV8to0f5/CZKO2gYpg4cN
      pSTlCM1WQQQocihQ2NHV14S9GUp6hV4+7jew8CXQpYrPP/2MLUdTwcyZzz95mYVz5tKmvLNK
      pw0NDdGWiGg6I0FyXomFhcWfv0hwzToshtPImjlfXE9kiB95F86iNncnzMeOU4nJSLVGRPWI
      xUheR3pxE326+ZCSnkWXiBgsTQzQqhWknT1FmwJsnDzpFupD9vkMfEIjsTDSkHYqGbWZLQYa
      MYF+DhTVqQhys6CwvBVnSzXpFwuwcvUjrlsQxbkZSI2d8LDQkFMlJbZbMHkX03H0CcNQXkdK
      2kU8g6NQN5XhERBKac5FvMIisDYVbnwj6FhVVRWLV3+DmeXlm74I1aACvSYcMAv0mpAAAr0m
      JIBArwkJINBrQgII9JqQAAK9JiSAQK91mAAaWRMJJ05S36ZA0lhFdn75Na1Mo2hl9cIv+GF3
      4t8KJnHXD5zMrmDr919yoVJ2Ta+punicdbtP/q33Ewg67DKVV17gwTGjeO7zH3k8uIG5uyWs
      +PJZci9mIrJyIcDTgbpGCU72FlTXNOPsZE99YxNVaTtZtS+fRYueoq2xmuyCcvyCQ7ExgWaJ
      BhtLAxpblViaQItEgaS1DUcPLywMtZSWlpFwaCv2prHk7N2Mce/n8TRqpLSiDmdPP5ysDKmu
      b0Epa8PM1hknG3Mqy0u5eOY4hwudmTSqL+g0VJQUUdeqxC8gAEO1hFaZitaWFlw8fbDsYExT
      gf557cNXkFu2An8wMpx3z8Gc37me5lfvBiB+/Zd8l9CIpuw8r8z8jE9fncPieU9y16Q5HNry
      Fe9/tpbhfk1UlBaTnHqWmUtnYxPcjZwKNV+/OpSZ68qZ+5wfz359gtd7G/Ph5ky8jKoJvP99
      YqRHWJFQiboii4mjf49hx/pvyaloJeFcPWtmTaTvhI8ZGudOuTiUr5/pxnMfr8XHRo5pzKTL
      L1DUsWThdzTX5dHkcy8P2KUxe3cpTqpyop6YzedPDbl+e/U6OnjwIL8kbaZXQD+emPTEzQ7n
      tmdoJ6Lr8ADgD9oApnb+PD7IieXbzgAajh7ch4mZOQ7WFuRWGBLs1sbWHfGMHx7Hnl178Y8d
      yN0jR9FrwHgmRltRaB3L1wvm49ZSSlGb/Kr19x39FB9OHUtLWxt7ElP4/OvvmDQy5vcFNDLk
      MhEyjYi2unzaFOAZNoA5M9/FVN1E4uGdPPzWHD6a+lB7FapcKkWtVSI2MKLoUglaYODY55g+
      +UFaWiT/4i68saqqqqg2LaO0qvhmh3LH6bwRLIJ7n3qB0zvWIkVMeEQkrRIFkX0H0tXPhf6R
      QazckcljD93FunVbGXBXbPtLTV2DsK9JZcl3yyjBAg9rSwrTj/LDxl3I1Ve+B4C/oz2rly/h
      WEre7/Paqliz+xRR0d0wMRBd9SJvv2D2blzB5j0J/FbMVJWdzOkiCeHB3v+39OX/1//nNdYe
      zmLlrNf56VjOX95ZN8u9997LZ6O+4tlJk292KHcEtVKNpFmKpFnacTGcWlJPUnYl/WK6kpZ0
      BLW1Pz1CnDiw7wBtGmP6DRqKibSCE9m1jOwdyuETKcT1HYiBtJLccgUxEQGU5aZxNPk8Mf1H
      EOJqxpEDBzBzdEdsYkWgvZgajR3eFm0UtZnhZ6PhUEIqrm4OuAdF0XbpHI6hvanMiKdSbYW9
      kZouYcGk5dYSF+FB2sVieoT7cejgEawcnDG39yA61BedWsL+XfuwdfdGbWiFv42SRgMXXAyb
      qVBYYS4tQmsfirYmG2OXMPzdbW/G/hfcZAkJCTQ0NABCNahAzwn9AAK9JiSAQK8JCSDQa0IC
      CPSakAACvSYkgECvCQkg0GsdV4Mq2jifkU5aegZ1zdIr5mWfPsKxc3kdvewP1ZRfIi0tjbS0
      dGrb16lm37o1lDQr//L6AOSt1axdv4XLQwxpKS/MpUV+5bhA2Un72J98+/T6Cm6sDhNAXp7G
      feMf49vF83hg4gvUtsqQyZVI2lpRyOUolGqUcjkyqYT6+kY0Wh0atZLiSwU0S+RXPP7Nmrmv
      8urHX7FixSouFtehUStpqK9jz7p1lDbJkMkV6DRqpFIZOp0WmVSOWqWkuryMuuZWtDodMpkU
      hVyKXKlGLm2luryA9T9t43JXnpr5rzzGyYI2lHIptbV1SOVK8k8d4tDp/Bu0OwW3A51OR1tb
      G21tbZ1XgzoGxLFg0X+4d+AQzh76kTdmbsTZxZ4J0U6UeNxDyrI3OVxtRmNhGu9+v5ucNe+R
      KnVgxMgJKFLXkyG3pLiwmZ+2rsbWCBCJCI/tz8juvgR62DPvjUkczFdQlnGJe8rSuful71k2
      /W7GvrSCXdtn8/zrG/h8SgxLfzlJ5ul0Zq9aw7uT78bF0ptH3nibZZ98gKWrEzUyhysDVzYx
      ZfwzGPqE4hc5iG7XeWfeCMePH2fzgY28+8L7eHh43Oxwbns6nY57nx9BSKx/522AyguHGDVi
      NF1GPI2fgwVKY2c2rF+Fm9VvOWPE469/xotju1NVWsSuAjkbVy3l2fui2Z6QhoerG2aKfPKq
      fv0V0EFpQRbnzmXQ0FpJ/OlyVq7fxMjoAGzcA/CSVrEjsYBBA7vwy/pfCB84CGMTC2wsLDDT
      SSipbgKFipe+XEE3cT7WfSaxeskcXMz/L3ADY3y9nalvlOJ1h3xYGhoaKKwuQKFQ3OxQ7hh+
      3bzocU9k5wng2nUwOw4cZuHHUzA1EOHl3wVnGwtE/1OYKRKJQATGFrb4G0hYunYj8SkFBDha
      oTOzZ8z4SbhZm7Qvb23niKurIwYiSyxMWvlp43oyi2vA0IbesQ6sP3KR8UNjWfb9FoYNH8BP
      a5fjEhaHm+2v42HauBIZ5IGTuxcFKcfZ/Msurmo+qJQE33Uf4+7yZ+H36/itRbD3h7n8eCCV
      7Us+Y/Oxi//Sbrwx7r//fvYs34+//7Xdo0Hw51yUPtQeknVcDKdqrWZfcj4jh/XFAGirLuRE
      Tisj+kdSev4UtUbuGNXnYe7fHW3VOXCJxt2wgc3bDxAQM4hoT0O2bD+IoZ0HD94/GgsjuHDq
      MGculgAG9Bo8EgtJAYfO5ONuZ0/MkKHoqjI5mdPC8LvC2LsjgZETH6Q5N4VdCVkE+7rh1SWK
      7PRkhgy9BxNDEfG7NlInssfazJxhg/sjFmk4c2gvbtEDuXTmABeK6ug97D4cFKVU4Yq1tBCp
      dSAmDdmoncOJ8He58XtdcMsRqkEFek3oBxDoNSEBBHpNSACBXhMSQKDXhAQQ6DUhAQR6TUgA
      gV7rMAG0ajmlZWXIlGpU8jbqG1v/cCWStlZUGi2yxnLWb9//D8LR0dbagkb7WxwKyouLKS4u
      prikhDa56k/XoJI2sW/XfmRoaW1p5aqbUQoE/6PDBJCVpBDVNYwFP5+k4OQW3vpsLQCSlgZa
      JL/Xo+h0OtRqDbM/eJHUkhZkdQXMX7ketUqJ+rdPcQd0WjU1NXVofu2DUynlKFVqQMYHLz5O
      Scvl5eStZcx5fzp9Y2N45a0POXepAZVCQl1DyxXrU6vVv60YpVxGSVEpahp587GXqRbKZwR/
      oNNqUK/YfpzY+AMjXh4EQOqeZUydtRkTrYLXF6xm16wnaBDZ4OARzLGt+zmS8TAfvfcqzQWn
      eWTMcKqNY5g6UEyOzUgszy4i0/V+7rE4R5nX/RRtn0eboTVKl55MidXw9rJjeNs78tDD/diy
      /zgZD0/ih1/W4WMXwDc/fk/hXYOZt3gZrso8xt3/JFZmIrpP/BCzU0vYly/BLLQ3VhkbaTD1
      IrrvfezeuRsvDwk7j++lcOwUNuz+Dscbtkuvj1OnThEREYGZmdnNDuW2p9Vq6fVgdxx97Dtv
      A1i4hHJfVxEbj+YAGnZsXsf0bzay4O0H2bw7Ho1CQvS9U1nw1RyGDe7OrKXrifUxx9o/lk0b
      v8O4roGofr1IOX2CCrU1osZCks6V0c1TRWJaDWEhgeQdT0BqYg4aNSGxcQy8ZyyDuoeydP06
      fP6/yhO4mHiQBp093UJ9OXgoHqVGiXXIQJZ88CwqhZxeY1/hpYd6oVKr6ffARPqGxrLq59v/
      ww8w7vGHKSsru9lh3DEcA+zx6eHxR2ODipk0dSo71yxDjhg/fz/i9+1g75Ez+Hp6gJEVfXrF
      YGZshIlWzfHD+2mUXa4QFYtEiADH0L7oMjYideyNu7qIi1JTwv38MbfU4ejThRdfnoSDaxgf
      vDWFlG0LSS6UolNLObz/CB3dHcDF3QONRolf9CCeGzcQAwyJ7dUbWwtTDIzN6N0rDlPj337U
      DFGrqjh4KJHS7EQ+W7CGguQ9zFu183rsz+uuNOcSQUFBNzuMO4JIJGLKgGncYzMOgxkzZsy4
      agGxAVZ2TkTH9CLQ24mu3Xvx4LixFKedQOTWnZefHIOtlSUhYd2wMTMiJDiA7IzzdIkbgJer
      CxGhIVhY29MtKhxHa0t6DBxOXIg7nhF3EdutK726+XMuIxsLF19C3Uw5mXSOsLvG8sCgGMIC
      fcg4X0SPft25XEgtwtzChi7dInDxDcXHSkHOpUp8QiMIDfDCOzAUN3tLTM2tCe56+S7xVrb2
      RIRHERroTEZuFT0iA2mTiwnytEcmsiDU/864TkDw94hEIkJCQggJCRGqQQX6TegHEOg1IQEE
      ek1IAIFeExJAoNeEBBDoNSEBBHpNSACBXusgAXQoFTIUSjXodJdvPfp/hW3FF89w5qLQLS+4
      /XX4C3B660ImvbkAhbyOh+97gIL6KwfIPXtoE5v2Z7RP67RqGhoaryg9VqtUaIRaZMEtrsOe
      YK2qmefGjsMlyB+CxvBoUDWL0y14OUbNV3uaGOlZyHFJNAZ5exg7/Qu2z36Vi40qLL168cUT
      Edw/dT5uliqcez7Cmlkv3YztEgj+0C/bfyH7UlbHvwBiIxtemzaJNTvP89qTd6NRyGiWyFEr
      ZTS1XP41+GnJB8iCRtDF4BJJEjd+2boNdcEh8ivrsfLpx4rFn9JSUXBDN0oguFZncpO5aJna
      eSPYPSAMnwAfnEzFiMQiKgsucir1QvtYm/2GjSUvYTdtRg7o6ktJOp1IrUSMlakRBmIxIpHQ
      vhbcukb1vo9hRvd1XgwnbSxj3c5Ennt8Am21Bfzn6xU4efth4xpGpHMbJVpf7FrOI3WJwbTq
      FFsOpXLXmMcZ6G/Az4lVTBjkx86EHCY+eM+N3jaB4JoJ1aACvSYcpwj0mpAAAr0mJIBArwkJ
      INBrQgII9JqQAAK9JiSAQK8JCSDQax0mgKTwJM4OjizacYbsI2t59q0lHb5Yp9OiUqvRATqt
      FqlEivZP+9XULHjrUc6Uqf9h6ALBP9fJ2KA6HENC2btuDQOe64FWo2PH8k+o85uAT9EvpFv2
      QZG8ktNlUirKa1m44SeSl3zGycJSDD378kxPI5Jl4Twa1sycIxIcGhN48JWv2Df7VQKHj2Lx
      +j1sTn2YL79dTN8Q4XalghtPqVTS2tra+SGQnV93BjjUsuNsOQAt9VU0tCpoa6imtrGNmvJa
      Hps+l/ExlpTUKOgxaBDdQvxJ3xePT0w3Du/fz4EDhwjt2o2aijLkSg01ZaVYBPRm3F0hzPp+
      g/DhF9w0iYmJ9BvR94/GBjXk2WmTWbd0CQouDydXVpBNfmnVbwtgYGCASCxCVl/GB/OXcc+o
      4diaGmEd1Be3tlNsOpTP8P4RiNRKcrPOU9Fw+T4DBoYGZF04j0Tx5+P9CwTXQ79+/Th15HTH
      Y4PqNCraNMYMGjQcc3UTfpG9GdgjmGOHDmLjGUB0j1542pkS0C0Ga0MV3l17Yaeo4nxZGyEh
      XejbvzdWqiYU7jE8NDQWc52Uw8fOEhQeQVzf/kQEuLPjl72E9eyNo6XpTdh8gb4Ti8WYmJgI
      1aAC/SacBhXoNSEBBHrtv0bBByS5pF4LAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='98' name='Highest Paying Job' width='192'>
      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
    </thumbnail>
    <thumbnail height='77' name='Highest Salary' width='189'>
      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
      fzJjxgz27dtHfn6+1gNQWlpKcHCwuGNKEATmzJmjJaykpCSxxZVKpeISh7bw3XffMXPmTLZt
      29bssoiKigq2bNnCnTt3gHrXYvr06W2+bnsiCALLli0TZ5sVCgU7duwQN5R0dbr9kGVZWRlR
      UVFERUWJxyQSCVOnTtXayjdz5kxmz56tcay6ulps5QGys7OZOnVqq6/f2D7ThkmxkydP0qdP
      H4YPH46zs7O4oOzMmTMkJydr7OgaNWoUY8eO1ai7srKSTz/9lPT0dK3rqlQq8e2lUCj45JNP
      tFaaWltbExoa2qbNHw0bYdavX8+zZ8/Iy8tjz549bN68ucsvM+7a1rWRTZs2IZVKOX78eKOu
      xO/FLggC7733XqPDjnV1deJKx/agYe1PA3K5nEuXLnHp0qUmz3F3d2fr1q1as6BqtRq5XN7i
      2vnnH4DGvmsrrq6uvPvuu2KDEhsbi6enZ5dfedktRW9hYcGaNWtYtWoVt2/f5ty5cyQmJlJS
      UiK2nkZGRkilUmbOnMn8+fNbFbKjPfj888+ZM2cOUVFRpKSkNLs/187OjsDAwE6ZjW0NDVsx
      k5KSSElJETfjv/322116jX23DgHSGEFBQfz222/s2bOn0zuFKpWK4uJi7t69y71798QtjhMn
      TmTEiBH069evS4r9dadbtvSvC4IgYGdn91IBnfS8OPpmRI/OoRe9Hp1D53z6J0+eoFQq6d27
      t95f1lF0TvR69OibOj06h170enQOvej16Bx60evROfSi16Nz6EWvR+fQi16PzqEXvR6dQy96
      PTpHlxB9XV0dcrmcJ0+eNLrxWa1W8+TJE+RyucYGkKdPnxIdHc3+/fspLi5u8/WvXbvGwoUL
      OXHiRJvr6CxUKhX5+fkkJCSQkJBAampqu2x62blzJ0uXLiUrK6sdrOxadImlxffu3WPr1q1I
      pVI2b96stUOoqqqK7du3U1hYyKZNm8S9mdXV1SQmJlJZWcnkyZObzCTyupCenk5ZWRmenp6t
      Kp+ZmcmuXbsoLS3VOC4IAiNGjGD16tVam9z1dBHRtxVzc3OWLVuGUqmkf//+nW3OSxMTE0NK
      SkqrRJ+Xl8eOHTt4+vQp48aNExMW5+TkcP36dbKysnj06JFe9I3wWovexMSkyyfq7Sj+85//
      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
      7JBlB7/n/wFwKMJuTK8l7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pay vs Demand' width='192'>
      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
      8P8Bl9mh9HdYn48AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pay vs Demand Dashboard ' width='192'>
      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
      mQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatterplot' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='104' name='Top Demand Job' width='192'>
      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
      z9Tz9PLyYtWqVXTv3r1W9u1SsRuUmprKmDFjyMnJ4fbt23Tr1q1a3R/4fzVsu93OjRs38Pf3
      F4Pg581oNNK2bVu3gWJFiqJw8OBBZFmmbdu2ajcpLCwMSZJIS0vj1q1blbZ77tw5rFYrPj4+
      tGrVCigfsBoMBvLz88nOzq71czEYDERFRTFhwgQA9Ukxvr6+tGvXjuLiYg4dOlTlw/dqytUN
      unDhAlarleTkZGRZrnb3B8qfFBkcHIzdblfnKkQAnjOdTsfIkSPR6/UkJSVx6NAht+X79+9n
      //796PV6Ro4cqbYA/fv3p1WrVpjNZtavX4/T6VTfY7FYWLlyZaVqzSaTia5duyLLMitXrlQL
      4UL5pcukpCT++uuvah33jz/+yM6dOytNnCmKwj///AP8v5XS6XTqJNfPP/9caSIMyscnGzdu
      5NKlS9Xa/8Nc3aDCwkKSk5PJzMx86u6Pp6cno0aNQqfTsWvXLhITE0UXqC707duXwYMHk5iY
      yLx58wgNDXWbCFMUhaFDh9K3b1/1PX5+fkydOpX4+Hh2797NiRMn3CbCiouLK1Vr1ul0TJw4
      kbNnz2KxWBg3bhxt27bFy8uLixcvPtUDqO/evcv333/PN998Q6dOnTCZTABqhWmj0cjw4cPV
      9aOiojh9+rR6js2bN6dbt25IksTly5fJzc3F09OT3r17P9O/YcVu0HfffYcsy9W++lNRZGQk
      J06cIDExkbi4OBGAuqDX65k/fz6NGzdm9+7dZGRkkJGRAZRfUx89ejQzZ86sdBUkKioKvV7P
      119/jdVqVbsckiQRGhrK4sWLK9Xq7969OwsXLmTRokXcvXtXvY2hQ4cOzJo1i9WrV3Pu3Lkn
      HvPw4cMxm81qmfWK1+BNJhPz58936+u7zjEoKIitW7dy69Ytt1vGTSYTU6ZMcXtq5dNydYNc
      cxRP0/2peJyxsbGEhISwbt068YOYuuZwOEhLS6OgoAAfHx/CwsLc7qepiqIo5OTkkJOTg16v
      p2vXrjRv3vyxN4qVlpZy9epVzGZztdZ/3L5v3brF5cuXAejYseMTt6UoCvn5+Wo3yNvb+4nn
      WN1jcf2iDWpetVpRFBEAQdvEIFjQNBEAQdNEAARNEwEQNE0EQNA0EQBB00QABE0TARA0TQRA
      0DQRAEHTRAAETRMBEDRNBEDQNBEAQdNEAARNEwEQNE0EQNA0EQBB00QABE0TARA0TQRA0LT/
      ASN94negCkPjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top Jobs (Bar)' width='192'>
      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
      iwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Jobs (Table)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dZ2AU1d7H8e+27G56I4GEACH0LqFIl55Qld4EBUGKdBDpVZGrFEEEFBBB
      kC69RCkBpCYEQxJCSQgkJCG9bbJ9nhfRXHmUcFWsez7vsjt7Zja7v50zM2fOXyZJkoQg2Cj5
      X70BgvBXEgEQbJryp39IkoTRaPyrtkUQ/nRPBMBqtVJQUPBXbYsg/Olk4iBYsGXiGECwaSIA
      gk0TARBsmgiAYNNEAASbJgIg2DQRAMGmiQAINk0EQLBpymcvIgh/nfT0dA4cOEBaWhp16tSh
      S5cuqFSqkudzcnL48ssvsVgsKBQKgoODqVSpEiEhIVy9epUWLVrQrl075HI58fHxHDhwAEmS
      GDx4MN7e3mIPIPy9hYeHk5+fT9WqVdm8eTNbtmzhp6N3IiMj2bNnzxOv2bt3Lxs3bqRq1aos
      W7aMo0ePkpyczIwZM3B0dESSJAYNGoTJZBJ7AOHvrXPnznTq1AmDwcD9+/cxm81PPH/79m3a
      tWvHiBEj0Gg0yOVyNmzYwBtvvEFwcDCurq4cOXKEjh07smPHDpRKJQ8fPmTv3r1YLBaxBxD+
      3sxmMx9//DE9evQgPj6egQMHIpPJSp7Pyclh8+bNtGjRgnHjxpGWlkbVqlXZsWMHYWFhREdH
      8/jxYyRJQqFQcPnyZUaOHMnkyZPRaDRiNKjw9yZJEjk5OcTHx7N+/XoaNGjAmDFjkMuf/O02
      GAy88847VKxYkVGjRrFr1y5iYmIwmUzk5eWxfv169u3bx7Zt21i0aBGBgYHIZDKxBxD+vqxW
      K/fu3cNoNFKlShVatWpFTEwMZrOZqKgoDAYDly5dIikpiby8PCRJws7ODkmS6NKlCzNmzMDO
      zo4WLVqQkpLCunXrWLBgAb6+vqSlpWG1Wp99DGDSF/Aw4QGFZjm+lfxxd9T8Txufm3KHK9GZ
      tHypGfbiSEP4jY4cOcK5c+fQarXodDoWLFhAUlIS48aN4+DBg8THx7NkyRIcHBxwcXGhf//+
      3Lp1i6VLlyJJEv7+/vTt25dbt24hk8lYtGgRcrkcNzc31q9fX3oXqCjrPounTODrK3HYqZR0
      m7aWd4e2+p82PObEGl6dd4mDoTsor31u/w/BBhkMBgoLC3F2dkahUPDFF1/g5+dH27ZtgeLj
      BIvFglqtRiaTIUkSBoMBvV6Ps7Pzz7pLP1XKb7OVM9tXsOumlS/2hVCvrJJsoxqrIYed61ex
      92wEDdoPZtKbfXGQ8ti3fgU7zkYT2KEPb73Wp6QVyZDL7i+34taoG9WVD/l4/VYe69X0GDqO
      V1rXRi57+hYIAoBarUatVpf8HRwcjIeHR8nBsEqleuLagEwmQ6PRoNE8u7dSSgAKuBRymcY9
      p9K8VnnkgDNwdvNMFm39njlvD2DjvMmY3CsRbDnMrM8vM3fqYLavmIdeW5bB5QDJwvndq1j7
      9UO29hrM2uHjeFB1BIPbe5P66BEStX/jv0SwZV5eXs+trdIPgmWATMZPf6TPnjpKYK+RDOw3
      lPH9WhN66ltOnThNkx4jGDZ4KKP7NCTk4jUAkm6FMHnRTt54ZzqVPZypUb8eUSE72Hb4ClVq
      VxNH4MJfrpTvoCNN2zcm7OvtXI3PwFiYQ9LjbDzcvcjNSMciWUhKTcXR0Q0vTzcyMzMwW4wk
      p2bh6ugAQJkKDQhu4sPxI6fRmcx0HrGMfds30MIjmdGzlmOyWP+ktyn8W5hMJrKysp5fg1Ip
      CjPipGlDOkkVKlSUqgRUlqZuPC0lXT8kNarmLzUMfEHyC6gvHbuZLqVGHpMCq1aQGrzQQAqo
      1Uw6cC1Bij6+WmrYeKAUHXtN6tKkgfThvhPSzD5BUrOX2kpNalWRXpm+TjJZrKWtXhCeYDKZ
      pOPHj0tLliyRMjIyJKu1+PtjsVikK1euSKdPn5YsFoskSZJkNpulsLAwKTk5WZIkSdLpdNL5
      8+clo9EoWa1W6cyZM1J2drZUagAkSZIMhXlSwr3b0q3Yu1JWvl6SrBYpLem+dPHid1JCcqZk
      lSTJarVIGY/ipIsXL0sJyRmS2SpJhsJcKTk5TTJZLFJ2WrL0ODNXyslIlW7fipZibt+TcguN
      kvj6C/8rs9ksTZ8+XRo0aJDUvXt3acaMGZLJZJIkSZLi4+OlVq1aSR06dJAMBoOUmpoqDR8+
      XKpYsaIUEhIiSZIkJSYmSl26dJGys7OlixcvSt27d5cKCgqkZ56ht9M6UTHA6YnHyvhWooxv
      pf8+IJPj4VOZZj6VSx5SaJ0p98PpT9cy5X541BkXD+/fu9MSbFBBQQHR0dEsWbKE+/fv06VL
      FxQKBRaLhdWrVzNu3Dh27NgBFJ8WHTZsGCaTqeT1kiRhsVgoKChg8eLFzJ8/H3t7e3EcKvwz
      ODs707VrV/r378/OnTuJi4sD4PLly1gsFlq2bFmyrK+vLy1atMDOzu6JNh4/fsz48eNp2LAh
      jRo1EkMhhH8OmUzG6NGj2bx5Mx4eHrz66qs8ePCAOXPmUL16dUJCQkhNTSUsLOypbTg7O9Om
      TRtiY2NL9g4iAMI/QmFhITdu3EAulxMUFERAQAApKSl06tSJ7OxsYmNjycvL4+HDh1gsFkwm
      E1arFbPZXDKEWqvVMmzYMHx8fFi3bt3/NhZIEP4OZDIZO3bs4NChQ1itVvr370/jxo1p1qwZ
      AKmpqSQmJtK7d2++/vprli9fTkpKCuHh4Rw/fpyJEyfi6OiIXC5nwYIF9O3bl6CgIDEcWvhn
      uX79Oo8fPyY4OPi5tCcCIPyjZGVlodfr8fHxeS7tiQAINk0cBAs2TQRAsGkiAIJNEwEQbJoI
      gGDTRAAEmyYCINg0EQDBpv2sULZer/+rtkUQ/nRiDyDYNBEAwaaJAAg2TQRAsGkiAIJNEwEQ
      bJoIgGDTRAAEmyYCINg0EQDBpj11WhSrsZCYmCjyiywlj7n7BFC1otdfmxqLkczsfBzd3FAr
      RH7/7XQ6HVFRURQUFFC2bFlq1KiBQqF4Yhmz2cytW7eoUqUKWq0WvV5PVFQUubm5eHp6UqtW
      LVQqFTk5OURERKBWq2nUqBF2dnZPD4C5II1Nq5dyNfIeCWk6qlatwksDpzPnjY5/bQDSo+jT
      Zzbv7txH8/L2f+WWCH+CCxcucPDgQVxcXLh58ybjxo0rns/nh+owSUlJLF68mEuXLnHw4EH8
      /f2JiIjgiy++wN3dnVu3btGnTx969+7NrFmzkCSJ7OxsmjdvzltvvfXkrBA/HQwnWS0UFuoI
      +3olkz69wVe7vqCCu4brxzcRqa+CS+oZZE1GUT75EB/v+Aa90oVX35rFK428Wf/xKqwO7kSc
      u4D3iy8z+62B3D61nY8276dQ6cGwSbN50fE+i7+6QoCUTGicgckL36NVFRfO7v2UlZv34ejf
      jOnvTKeWUy4frttNq1b1OHk+Eu+8Wyz87Dituvege58xjOjR8K/5ZIQ/hcFgQKlUIpfLWb9+
      PUajkQkTJpQEIDw8nIyMDFauXMm6devw9/fHaDSiUCiQy+Xs3buXmzdv8sorr7BixQrWrVtH
      Xl4eQ4cO5dChQ0//MZfJFTg4OmOvVaNQKHFycsZeY8fd66F8/N4cNn17G61GRZ5Fy/h35tM/
      0Im5sz8i01jIt4f3cDWugKaNAjiyayuPkhP4cMEaqgaPZProvihNRgpSo9i28zDlmnaltjqB
      6YvXkxR9kukLv6TnuNnUkd/i7fmfkJ2XwaH9W5k99z3SDCpeaNQQtcqeJm2DeKF6uadtvvAv
      oVAoOHToEBMmTCAqKoq+ffs+USg7MDCQNm3aPFEjTKFQ8M033zBt2jRCQkIYOnQoycnJ+Pn5
      odVq8fLyQqFQUFhY+Nt6M/aVW7D9q+283LAssvwUVry/mB0nw9Fn5KIHsHMiqO8QunduhbOd
      hKR2pXWrWuxaMZOlnx3Fyc2luOxSuer07xHM64O68yjyFtdvXKCwUgv6d+/IgKH9KLr1Hen5
      gBn6T1vJJwsm0ap5I9RKLU3adqahCMC/nlwup1q1ajRr1oz8/HzCw8N51lRWcrmcgIAAmjZt
      CsDFixdLqkfCf6dKh994Fsg/oAGezhpkBTHMnbWTCcs/54PpQ57+ApNEl8n/4fTJw7RxT+b9
      1TsxWgBJwipZuRMbi2P5sviXrYCU+YhMnYnU+3GYtF5o1YC9J/VqV0KlkINSiUZmprDIhJjR
      699NkiSKioqoVasWgwYNYtCgQZw4cQKLxUJRURFW689LbEmSRGFhIVWqVKFfv36MGDGCU6dO
      UbZsWeLi4tDpdDx69AiZTIajo+PvnBzXoRzVfAsY2bUdtfw9gDK/vJw+g9mT3iAm1Uh+Xg5D
      5kxAKb8Bd7+hZkBl8q3OvLdlLzUaudC90i7a1KuJTK5hwn82lRTZKOFVnZ5N3BnxUk36TNnM
      uhldftdbEP6+rFYry5Yt48aNG5QpU4Zbt24xb948cnJy6N+/P7t27eLLL7/k0KFDxMbGMnTo
      UHr27IlSqeTkyZP4+vpy+/Ztxo4dS926dalcuTKDBw8mNzeXsWPHFtcVftpBcMljFjMmixU7
      lR0yGVjMRiySApVKgQwwFhVQYLDi5KDFapWws1NhMhlRKO2QY8VktqBUqbCYDOgKCpGp1Dg6
      2JN45iMazA/n0fGPkRRq7LVq5BS3n/Y4BaVjGTxc7JEhYTSaUalUyH8oKmwxG8jPK8DOwQV7
      tZjg+t/qx65KXl4eubm5eHt7o9Vq+eqrr5AkiUGDBpUUyf7Rjwe/+fn5ZGdnU6ZMmeJKMHI5
      FouF5ORk7O3tcXNzQy6XPzsAf5Tka3sY8fkdjn8y+09Zn/DvcefOHSpXroxS+ft//P6yAAjC
      34G4lCrYtD84ABImgx6jyVLqUhazkSK94WdndaxWC0VFeixWcb5HKGa1WjEYDM+tvVIDkJsa
      R+iFqxSaSluqNEb2rHibDcciSl0q7twXDJv2EYX/7/Gs+CuMHfkWEYnZv3UDhH8Rq9XKnTt3
      OHDgAHq9HkmSSoY23Lp1i4SEBMxmM5IkkZGRwd27d0lKSsJisWA2m0lNTcVisSBJEsnJycVX
      mZ+6MrORG99uZ/xHF9j45RfUruSBKT8buYMr5rws1M4u5OXk4+HtjdxYQEa+Ca8ybmA2kpL4
      kAKTgvIVy/DwdgQprt2RzAbSMnJx8fRAoywezGQxFPAg6TGJCbFcjsjBbDGTkZWJvZMrhXnZ
      yJ18aN+pHV72ctIep+Hk7oFWBVmP01E5e+BoZyUhLh6znTOVKvigkExkZWbj4OxCQW4erp4e
      5KWnkJVvwNXTCw9XR+Q/uYoo/HNYrVa2bNnCgQMHyMzM5O7du8ycOZPk5GQmTJiAVqtFoVCw
      ePFiMjIyWLZsGUqlkqysLCZOnEj9+vWZPHkyn332GRkZGUyZMoXNmzc/PQCFGQls3bmPlMQs
      5kyewpRliwlbMRZDza5c3rOf2atmMXnsf9gSegqPqH30XxXD8Z0LObV+Acu2nkHj4MvU5Ut/
      aM3CxX1rWBtaxKoP3kGjVGA1ZLH4rdc4fDMHT7tcoBGG/DRmjB1I9UYdOB0awZLFs9hzeD91
      m9Tjk7ffpu2sT+hXy8DIvuMYvfErUr6axWff3gFk9Jy4lNFtXJn0+jjqtWjN6cspvD2+LR+8
      +wkmOy2e1Zux+r05eDmJ06b/RAUFBRw9epSFCxfy8OFDGjdujFwu59NPP6VXr14MGTKkZI8g
      k8lYtWoVvr6+7Nmzh7Nnz1K3bl2MRiNGo5Fly5YxYsQI3N3dnx4A+zL+vD64L2FpF3h/zRpq
      +qkIeZzEsegTTJz8DnXdZTx48AijBGZ9PokpGeSlRbN6wwHGfHSQPo3LYVVaiQYeXj/J4rvR
      jF2xkTIOxWM2Hl3ew4bLRkKO7SXzxLsM3VKAZDXzOC6SOwUVmDxlGj72epJTkzFpylHTz8zJ
      M9dpZikg0uJBHdVt3lp3iTWhJ3G7sYWBH3/BoJZjSIy9wSNNNaZOHU1e5OekOdbig1kjKOPp
      jotGHPP/Uzk4OFCrVi0WL15M3bp1S6pDhoeHU1hYyKlTp6hcuTITJkygYsWKSJLEzZs32b9/
      P0OGDEEmk5Gfn8/69etRqVQlI0qf+o2QK1Q4OTqiUKpw9/REa1fcbXl5zCzeHBiEh1bxs9cY
      8h6Tb3Ckbq0qODg546RVAxBx9iipMi/q+HvzYwckPTUZhwpVqevnhYuzw38b0bgyauZC+nRs
      jkPJ+CYlrdp3JCHsPGfOXqBe0/ZoCzJIMxWy+5MP2HYmjvplPdADSkdPpsxdRLc2L/DSK2/S
      o6qJZXOm8vaSz8go+s0HM8JfTKFQMHPmTF5++WXCw8MZNWoUOTk5FBYW0rJlS6ZOnUp6ejp7
      9+7FYrGwd+9eFi9ezPDhwwkKCgLAaDSSmpqKnZ1dyYC6Un8S7V3dseSmcPLoMR5m6gBwcnYu
      7kdrtDijI/TYIfYev1D8XLk61CpvYvPGTYQc+4Y7yTkAdBk9h6Cyj/nPhn3ozcVndHwqVUEX
      dZEvDx3nm0sxP3mnSpycfj7Ov2ajluiTr7PtwFnaBrfFxb8OdV0seFV7kR69+zOwfzscALlS
      iZNj8evjY6OpHzSEKSN7Ex95jeTcot/xEQh/JaPRSE5ODnXq1GHcuHFotVqSk5OpVasWWq2W
      OnXq0KRJE9LS0rhy5Qr79u3jgw8+oEOHDiU30Hh4eDB37lyysrI4evQokiShWLBgwYIfVyJJ
      UklVbQBndy/M2QmcvXCDyo1bYF+YgW+DNtQs7wpaV2S5cVwJj8a/dkPcvCrSPbgdTRvW5OqJ
      g3x3I46qjZvhZMzGvWY7RvRuxZWz56nQoCleTmocylbBXR/H8TNhlK1SEy+fqgS1aUBacjL1
      m3WkvJsGi7GQpIx8WrR8Ce+yXpge3CBFVZs3R7yCh4sXTRv4EHLwEOE3YzA6VaRNoD+pyRk0
      atMJL0clmQ++Z9uO/dy4k0y73sPo3rI+dgpxEPxPVFhYyJIlS9i+fTsXLlygXLlyDBgwAH9/
      fxYuXMjdu3c5deoUI0eO5OTJk1y9epWYmBgOHTpEdnY2/v7+HD9+nL59+xIYGMjChQtp27bt
      s68ES5IVi1VCIZc/MQ4bQLJasUqg+H+3JkpWC1ZJhlwhp9Svm2TFbAXl/3hro9ViKVnfj9ti
      tRY/plT8vEv20+d/afuFfw5JkigoKCA0NJSMjAz69OmDg0Nx1zkxMZH4+Hj8/f3x8/MjIyOD
      nJyckte6uLjg7u5OWloaZcuWRS6X8+jRI9zc3MRQCOGf5dGjR+Tn51OjRo3n0p4IgGDTxHlB
      waaJAAg2TQRAsGkiAIJNEwEQbJoIgGDTRAAEmyYCINi0Jy6E/XTGLEGwBU8EQBBsjegCCTZN
      BECwaSIAgk0TARBsmgiAYNNEAASbJgIg2DQRAMGmiQAINq3UeQJNhiKKDD9OJiXH3tEepfxX
      Zsai505MLA4+1fD1eL51feOir4FrFQJ83Z5ru8Lfh8ViobCwEIvFgp2dHVqt9onZPX6sCabX
      63F0dEStLp6MzWw2k5+fjyRJODk5oVQqKSoqwmg0IpfLcXBwKK4mU9rKQzZMI6BKderXr0/9
      +l04l5D569+B4THvDOnJ1tC7v/61z7B6Rh9W7w5/7u0Kfx8nTpygc+fO9OjRg44dO/6sSuS9
      e/do3749PXv2ZOjQoeTk5GAwGFi2bBlBQUH06NGD3bt3k5ycTP/+/XnllVdo06YNa9euxWq1
      PnsP4F3jZb7aOgMnlHj5uqFLj2PLp5uJ0zkyZOQIGvqXQZ+bwo5NnxGdCi8PfZ0WtStgLszg
      xP7d3E7NIS3/yfnc81LvsPWLnaTolQT1GkLL2r7cvXaCTTu+xbdxB17rG4T5cQynw1OpHWBP
      1J0cJEMBgZ27EuAucfSr/fi1foUB45aCfx0kq4mbF46wfV8oZRt0YsywTjy8foatOw/jWbsD
      wwYE46ZVPeVdCn9nLVu2JDQ0FKVSybp16wgJCSEwMLDk+bVr1zJmzBgGDx7M9OnTOXr0KP7+
      /ty8eZNTp07h4OCA2WzGbDazc+dOHBwcSEhI4LXXXmPMmDH/wzGAJGGVJCSZDLklj4UjB7L/
      Zh4OueF0Cx7GQ52JtTOGsjYkHhfpAcP6DyI8MYs9H0xm6od7yM/N4HHBkzP/r5zSiwNR+fi4
      Kgk5fZ68uLP0GvQObtWqcf6zuazce4XUmLPMnTSDUaPf4nDEHY5sWMC2U7fQJ4bz1oxVFCmV
      7Fk3jz2XHvDwym56DJ6OzLsCiuwsEuO+443h01D61uDylwtZtvOCKKn6D+Xk5MSdO3fYtGkT
      Fy5coFu3bk90gWJiYmjVqhVKpZImTZpw69YtIiIiUCgUzJs3j5kzZ5KYmIhGoyE/P5/Dhw/z
      3nvvMXjwYBQKxbPLpMbd2M+gnhdRuFRj039eY8+lIjZdXUw7Hx3fVQwgNOoOBw9dYfKBeAbW
      shJ1uSPnLlzl6jcxjFzwKW939iTq8L4n2vTwLk/m1Sju+bdn+IjORJ1aQrpbJfy9PMgsb8+J
      85fp+7KK3KICps3bxdBODdj3bhhbTl8kXMrDsW4zantofmjNypm9u6kQ/CZLZ01BBlz9aj4J
      Fh8q+pbBUMGD8ycvU/h6Wxx+9u6EvztJkoiJiSEyMhKlUonJZCqZAh2K+/o/Vom3s7PDarWS
      k5ODRqOhe/fuXLlyhYULF7JhwwZSU1O5du1aybEBPOMgGKBqYD/27pyDs0yJs/EeWqWEXm/C
      bNBRZFJip9Kg0Sow6A1YTBaKjBZUSgVWrBj0RiwWC5YnChpbGPj2BupEfs+3u9YSPDqJr4eo
      KczJIq/IxAtdx9DctxYUXaBcpUZ0bvMCKjm82LYzS+cc5Ig+kxfbv41W9d+dl72DPYaUAvQW
      CTvJgsJOjTE/i9wCPfU6DqO5Z3VEB+if58f7U/r06UPfvn3Zt28fGzduZM2aNUiShFKppHz5
      8sTGxuLr68udO3coV64c5cqVIzMzk9atW+Pn58eMGTPQ6XTUq1ePBg0akJmZSefOnenXr9+z
      A6C0c8CrbFlcAawOjHqlEu8MG8BaTS75DQbTobY/ltd6sGhCfw56y0lS16Zj2xdxi67D3AVj
      uLGvIt8n5/BiSYtFrJ8/hRt6V+TJWfiUL0ONtkG8uOxrvvxqD2UdFVTr5EZ1vye3w69ec8pm
      L+bTyCI2TWvEf+e4ldPhtbGsf2UkXbtHUL5cYxYs6E6zCtvZ+9VufF3tCGg9lKBOjZ7bByP8
      OaxWK2vWrCErKwtvb29OnTpFt27d0Ol0TJo0iQ8++IAhQ4awdOlSwsPDOX36NOvXr8fR0ZFd
      u3axcOFCkpOTadSoETdv3mT37t3UrFmTuLg4AgICis8olXZDTEbibR7m2FGvrn9JUgz5aVy6
      cJE0vZoXW7WmgqcDFn0Oly5cIDlH4oXmLajq444hP51r126gdPVGbS7Eo3IdKng6AlaS78UQ
      HZeIRaamTqMX8XXTkpF4h+9v3UdSaqlSuz5edjpuP8ijdr2aqBUAFmKunichV0WrNk1xslMS
      F3UVPGtQ2duJ9AexfH/7AfZuFWncuAZ5j+4SGROPWaEhoGY9Kvu4lz5Rr/C3I0kSiYmJxMTE
      kJOTQ6VKlXjhhRcICQkhIiKC2bNnI5PJCAsLIy4ujsDAQKpWrQpAcnIyV65cwdHRkebNmyNJ
      Ejdu3CApKQl3d3cCAwPx8PAQd4QJ/zyhoaE0aNAAFxeX392WCIBg08RQCMGm/Y0CIFGQnU5S
      aibWZy8s2Cij0Uh6evpza+9vFAAL32x4m26j3v9ZwWxBADCZTBw9epRVq1aRlpZWci7farUS
      GhrK0aNHSwphX716lY8++ojQ0FCsVis6nY6QkBCMRiOSJHHs2DEyMzOfrBH2/5mLcjh9/ADf
      hd9G414WB2sOl8Nj8ShXlqK0eMLuplHeS83Vc5cxmvUcP/4tGu+KeDiqMRakc2TPTq7ezaBS
      5YpoLPlcuvw99q4aLl2JxJj1kGSdCm93Bx7HRxOZWEC9evWpFxhIDb8yZD2M4cDBo8Sl6ijr
      Ww6NUiLq4kn2HTqLwqM8Zd0cyUiIJjpZh7IgibtpFtzVhRw/cIBrsQ9xK+ODi4Pdn/XZCH8w
      s9nMpEmTiIqKIjU1lZiYGNq1a4dcLicuLo6JEycSFhbGwIEDiYyMZNq0adSuXZuNGzdStmxZ
      HB0dmTNnDj169ODq1ausXbuWQYMGlXYdQM/aSQPZFu9A86quXL6RwaReDvR/fR2nLodQeHYL
      w7blErt/NGM7dUbdthtO+bdYtDGEM19/wIcje3FTXgPP/I0cvZLIF5MaMGLwWwS2dmJPpBMb
      e7myMrYSYdvnsGHeaB7Wm84g52NMOu/DlQoW+vfshWfDYDT5JyjQeFH18T4Gzt5JmxcDWPDu
      craevoBl/3LmfVcAkd/SYsoWVN8t4ZqlOnXKwI0UIx+O7/XnfULCH0qn05GQkMCSJUtISEig
      R48eyOVyLBYLK1asYNq0aWzevBmAY8eOMWjQIEaOHImfnx9HjhyhevXqWK1W8vLyWLx4McuX
      L0etVpfWBbJQpDNgp3GkVosezJ8zDHskLJYfeuiS9YcrvBJyOw3vfrqXnTs3YJ9wmm9DzxIa
      lcZrw0cyuH83Ys/vJzXXjMUST45rN5Iv76P7y12JPRvKI0MGF67comPHVkjW4jYtFhNGswlH
      t7L0nziHvi3LsnPjFrpMWcHmbfuY0NmFrXvOY5WsRIVFMXPvNVaObUOB3oDG3oWmXYYx540e
      f/ynIvxpnJ2d6devH7169WLz5s1EREQAcPbsWezt7WncuDFQPHw6NTWVSpUqIZPJKF++PDqd
      DovFQkpKCiNHjqRVq1bUrVu39ELZSFrGrfyct7rX5eyWRfQcPosc4w9PSRQH4ScnUCVJQrKC
      XC5HJlnRZ2fzzZH9XLtvYsDgPjipACozadow3LVKXOp1oJ39dY7tP0EULWlbz1PlxXwAABKS
      SURBVP2/b7Z8fT7fuo3qjjnMeDWYZXsuY7XK0KrVIEkoVGosJgsS0LDLIHq/GIBM7czST3fR
      t0k5dv1nPP2mfYLxOX8Iwl9HJpMxbNgwdu3aRbVq1Rg1ahRxcXHMnTsXLy8v9uzZQ2JiIufO
      nUOr1ZbUuisqKio5VnB3d6dv375ERESg0xXXvX56AIxZfLZqNdEpenwq+CE3GdE6eqIpSmLR
      21N4b9MxrD8EwGIoYu2SqYwbPRVrjS60b9mcFxv48iApFavFTEFeLpLs//W2ZO4EBzdlydwF
      1O8ajNdPqpym37/EmtW7MNuXwa+MA3qDli59u3L043m8/fZbbD6eSLfuLz6x8SZdNms+XMxD
      nQr/CmUx6g3ibNK/iE6nIzQ0lLy8PBo3bkylSpXIyclhyJAhaLVaCgoKMJvNGAwGateuzZkz
      Z8jPz+fixYtUq1YNpVKJWq2md+/eVK9enTVr1jzjfgCVC8E9gjlzNRqzZxeGdXkZ/wr2fLpy
      EfeyZQS+MZCEnOIhZjKFkho1a+PTuAGLXn6Fcp5OLN+8i4NHvyG7CALqN8PJy4/F/5lNDff/
      jsnsNXYuhioRNOrYE4AaLw1lcQ173Mr5E9SlKbcfZdN7ygpe7v4ibsoGLHffzbWYVD7YcZBu
      jXx5pHqdd/KcizdX60TXHn25eDMB7/avM7HHy2h+/q6EfyiFQsHZs2f5+uuvMZvNDBkyhAYN
      GtCoUfEYr7S0NO7fv09wcDC5ubmcOnWKgQMHYmdnx+rVq1EoFHh7e6NQKJg1axbDhg3jzp07
      v/9KsEl/i84BQSy49IDWFZ7LexWEp7p+/TqPHz8mODi41OUsFgvZ2dm4urqiVD79d/53B0Cy
      FnH75l18atTDWf17WhKEZ8vNzcVgMODl5fVc2hNjgQSb9je6EiwIfz4RAMGmiQAINk0EQLBp
      IgCCTRMBEGyaCIBg00QABJv2xDViq9VaMopOEGyB2AMINk0EQLBpIgCCTRMBEGyaCIBg00QA
      BJsmAiDYNBEAwaaJAAg2TQRAsGmllkhKS4ji+7spP/yloUHzJpRx+HV3vhdm3Gf7Vydo3X8w
      pttniNH50Suo4bNrMwnC75CVlcV3332H2WymSZMm+Pr6kpKSQlhYGCqVilatWuHg4FD69/Da
      oXW8ufLcDyWSvJlbq86vDoDFWEhC/H0CDWZiQ/ezK6UlPUUAhD9QTk4OM2bMwNXVFWdnZxwd
      HVGpVEycOJEaNWqQlZXF4cOHWb16denfQ6vVTPlaXdm8cx7OyFBrNJzesYwVnx8jz+rAkEmL
      GNmlARvfn0xcoRMxYZfxqtue6tpUTl6O59V33mdAPS1WtRqN6r+runV6G+vO5rJ6/lhyo44x
      e0ccq5ZNFGVMhefi8uXLODk5sXTpUhQKBZIkERUVhaOjIzNnzkSn0zFgwACMRuOzjwFy0+5x
      /NAhDp0IJbvIiNKtEotXbWR2/3rMXLAcnWQl4rsQ7uW5MGxQB87s2Ii1cntaV7KyZedJCouy
      OX32HBm6/87UWalKRc5v/IRLj4oI2b2NPJU79n/ov0SwJbGxsVy/fp2goCDatm3L6dOnqVmz
      JpUrV+b1119n2LBhjBkzBo1G8+yeSG76XY4dOoTKoQKBrZuQHR/Feys2YdFnYsj3wQAgVxLY
      Npi2jbLwcdhNp+CXSdef4Zsr5l+cn1Pr14IB7ZzYuf84uScv0fuzdaKCo/DcSJJE9+7defPN
      NwkPD2fDhg14eXkRGxvL7NmzSU5OZvv27XTt2vXZe4BKdbuzYds2tq1/jyqWBOavOcOsjV+x
      +d2xKOVP/9qW+oWWKRj86hBOfjKTcFVbghu4l7a0IPwq9evXJzY2FrVajbe3N3K5nNu3b+Pu
      7k6NGjVo3bo1iYmJ6HS60vcAcoUKOzsVCoUCBYBreZpVKmRwmxepX6cyKpUjMkCpUqNQyEAm
      x05th0wGcoUSO5USmUyOnZ0dchkolCrsVMXTQAe060tt2QJ8+vTHSfz8C89R8+bNOXLkCD17
      9qSoqIhx48bRsWNHDh48yGuvvUZGRgYvvfQSbm5uT06N+L/cEWa1mNCbrGjVdshkv/Gba9Bx
      O/YqowZO4L1T4bQoJ0oZCc+XJElkZWWhVqtxdHT82WMODg7IZLJfH4DnIi2SoVOX06LvWN7s
      0fSPX58gPMVfEwBB+JsQQyEEm/arA2A26iko1PNrJ1WXLGby8/MxWX5+YtRqMpCXX4BFTNQu
      /ITBYMBo/GMrvf3qAESf3MLkResxWH7d64qSv+eNwa9xPi77Z8+lRhyk76CJJOh+7dYI/1YG
      g4GQkBDOnz//RAj0ej1xcXFYrcU/pGazmcjISK5evUpeXh5Q3JVPTEwkLCyM+Ph4rFYrRqOR
      +Pj4kkLa9+7do6ioqPTToHmZKRRY7DDlPMZg50ZAhbLoMh4RG6cjM/k+aTkGatauRl7qQ3Ao
      g5erPQVZaeSY7fBxsych/g55ejm+lfxxc/GhV7++VC5jD0hkPornXlI63hVrUKZ8bQb2U+Oh
      kdAXZBMf/xAjavyrBuCiVZD+6BFyBxeyUx4iOXoTUL4MklHHnTv3MMo0VAoIwEWr+uM+DeFP
      lZeXx5IlS4iKikKlUpGens6AAQOIiIhg5cqVpKWlceDAATQaDWvXruXSpUvFV3WVSj766COi
      oqJYunQp5cqVIykpibfeeos6deowY8YMNm7cSEpKCjNnzuTzzz8vPQAnN81keUgmfpoibj2y
      sGzLl7gBKd+fYeLEu0TdvMWoFfvx+X4V+3RN2PXuUL54dxqJ1QfQynie9/eF4eniiP8LvVgy
      5gU2rt+JX9vOyO8cZ9ikZahc3anTYSgLOjmweu1BOg3syP6VizgUnkBeego+rYaxfskAPpow
      gisGFxQFicQX+HHk28859d4IdkbocHe0o1H3t5g9vP2f9PEIf7SEhATS0tKYNWsWWq2WypUr
      AxAXF0fXrl3ZunUrACaTiSNHjrBnzx60Wi3jx4/n6tWrREZGEhQUxJtvvsnu3bs5f/48tWrV
      wmQyodfref/99xk9ejQuLi6ld4GK8jNxqtWe9V9s55VaBr46+B1mwM3/BZZ9vIk+L3px+1Yy
      rYM6EnlwF98/SOTba7G0fLEOt67dwL1GK8ZPn8n44UGorWbSH2ditJjZunYZ3u3f4usDB5g/
      shuSuYjUx1lYFWo69H+d8ePG0LtzIFGnj/C4wEpeejoNu73BltULkR6nkGkoIOziRWq91Iep
      M+cxrFvgH/6hCH8ePz8/lEolS5Ys4dq1a8jlxV/TPn360KRJk5K/5XI5crmcmJgYCgoKcHV1
      5d69e3Tp0oVLly4xf/58Dh8+TK9evZDJZOTk5LBixQrc3Nxo167dMwpl/0Dj4o6Hhxflfdwp
      zNdhBTTOrvh4eeH0w9Bor7pBtCqfwca160h1aErzWn4MmjmPOqqHLJs9mbkf7UBn/rFFE6mp
      jwmoXQt7tRoXZ6eSdZkKM1m7+G22Hj5PWm4hMslccrBdppwvZT3dUSjkgAMzlq9DHneKORNH
      8uGuc8/rfy/8Dbi6uvLhhx/Stm1bQkJCmDdvHkVFRT9b7seSp+vXr2fu3LmEh4ejVqu5e/cu
      np6edOjQAT8/P+7evctPS+EZDIaSv58ZgJToK3y1dR07v4mnWYv6/FJPW6l2YXDfTuzYsosW
      L/fE3VrA5SuxBHbsTa9OjYi7GU6B4cezPxo6BgVxdNMKdu/bz6EzYSXtGAuz+D7mLjXr1MPd
      SVtKoes0zp9LInjAULo28uVyWOSz3obwD5KXl0dRURHVq1dn4sSJpKWllVR2//9at27Np59+
      ypIlS/Dz86N69eqcPXuWli1b0rp1a7p06UJoaCgWiwVXV1emTp2K0Whk//79SJL07NGghVmP
      uHDRRKfRixgVXJ/0sId0NxhRyKF+y674lCkPMjkNOnah8tLT9OjcDJQqPBws7D1+GLNMzdSZ
      M/D2dKZXv+6Uc1TTcsxS8uQrOXXiONXbDqBDQGUGD+hIGdeKvDlqOCduXKRB40D6v1wNZzsN
      zbr3wr2iO9gb6TugO15aDx5pMjl2IBLkVVk2Y8Rz/xCEv05WVhYzZszg/v37aLVaBgwYgL29
      PdOmTSM6Opro6GgGDhzI5MmTuXbtGvfv3yctLY2qVavSsGFDdDod77//PtevX+fatWu88cYb
      JbWC1Wo1c+fOZfjw4TRt2rT0K8Fb53ZnD305uHBI8biJp4z9SYr8hqXLVvLIqyu7V4zDTgYg
      YbUWNy2Ty38+OlQqfl4ml/PTZiVJQpKkX37Nkw38cCpMjryUUanCP48kSeh0Ovbv30/16tUJ
      DAxEoVCQlZWF2VzSl8bFxQWTyURCQgIajYaKFStiZ2eH1WolMzOTlJQUypQpU1JTOD8/H2dn
      55LjAXt7+9IDcD/yPEmUp1U9/1I3OOtBJBdv59GqzYu4qMXNjsLzERsbi6enJ56enn/YOsRY
      IMGmibFAgk0TARBsmgiAYNNEAASbJgIg2DQRAMGmiQAINk0EQLBpT1wIkySp5E4bQbAFTwRA
      EGyN6AIJNk0EQLBpIgCCTRMBEGyaCIBg00QABJsmAiDYNBEAwaaJAAg2rdQASJKVvKw0Hjx4
      QGp6FubfMX2zPjeVc6cvkFn0S7P9WkmKjSDiThIGXTrnz5wnPc/wi8sZioowmcVwDeHpzGYz
      qampPHjwgLS0tCeG95hMJpKTk0vmGSolABKx576iZ8d2tG3XlpfadeBg+KPfvFH5iRHMfXsx
      d7IKf+FZCyFr57No83Hy02JY+M4CbiYX/MJymSx+fRC7ryT+5u0Q/v2uXLnC0KFDGT9+PL17
      9+b48eMl0+0cPHiQ1q1bs2/fPoDSJsbSsXv1apzbjObavMEk376OspwTD78/y8kbj1Hm3OFm
      upbJ08fj6wiXj2xj8/6LVH+pB6MHdcdepif00JfsPHaR6q0HMLJrTQaNHkplFy1JMRfYtHU/
      qQUSHQeM5JWWVUvW6uBehWGjBlLV24n0+zfYvOVLHuWp6Nh7KN5F5zhw8huua9ZgSOvGsJ4v
      oRCdOOH/adCgAUeOHEGlUrFnzx7OnDlDcHAwmZmZHDx4kH79+mGxFM/vX8rXR03VejUI+3o9
      M5asIUvlR4CPMw+unmD+/KUk6rXEHFvNlA/38ejaXobN/JwWQe25tHkxn524ScSRtYyet5lq
      TdrgpbZQkBbPspXrSc43EHH5Es7+dannVcjwvmN4+JPejj73IetXfUhCdg6fvjORs4l2NKpb
      kfibtzHJZIAMmUyOXHzxhafQarVER0fz8ccfc+TIEfr16wfA559/Trdu3fD29i5ZtpQ9gIre
      U5fjWnU3W3fsZHCP7SzcdohqgG+9VkybMo0wlwT67zvPdXU+VndvzAX5OGnMnL9yEWvyUer2
      GsuU0cOQAwV3Tpe0XLNuHUK3HSQ74xFS1iMyfqlXhJLyVSuRfPIcZ51eYvgbXWhWR0FV57k0
      feV1XutR87n8s4R/p9zcXLKyspAkiYyMDG7evMmlS5do164dkZGRFBYWotPpStsDGHkYn0qj
      rq/x5e59dK1h4cyVGKwU3zeAZCElOR13FzccnBwpKtTj5u1H/4lLmNz3JVzcncnNyEBvtmI2
      GX8y0W0m898YjVOj/kyfMASHp63eKido7BI+X7OEKtJtJr+ziMwiOQo7MBqMv7pEk2AbJEnC
      ZDLRpk0b5s+fzxtvvMGXX35JZGQkMpmMVatWERISwuHDh4mPjy9tD2Dk2LpFfPbdXbQqKzn6
      sizv3Bh52BUeXjlI53YRPHiYyrzNi2hcJZ3qG4fzwfKVuNpB29fnMXT4BPa+Nol2Lx0i4IUu
      vD+68Q/t2uHhac++9UuIreDAzye9/oE5j01L3uHcQx2m7CTK1u6NWulJ83a1Wf7OQG6Hj+aL
      9yagFF0h4SckSWLz5s3cuHEDPz8/rl69Srt27Rg8eDCvvvoqAKtXr8bJyYm6deuWdkOMREHW
      Y+ISEik0SpTxrYR/+TJc3DiT8TuT+GTJeBzcylKnekXkWMlKSeDew1Tkdo5UDKiCl7OGjEcJ
      xCU+xrGMH1XLuxL3IJVKlf0pSk/g9oN0fCpWpDAjl4q1q6NPTSBP7kx5Dw0J9xMpV6kK+swk
      4hNTsMjU+FevgZeLPUU5j4m5HY+de3nqVvHjt9bqFv6dfiyGHRcXR2ZmJr6+vlSrVg2NRlOy
      TEZGBnK5HHd3919/R1jYng9ZelrP9jVz0Ih5cIV/uF8dAJOhkEKjhLOjg/j1Ff7xxD3Bgk0T
      h5CCTfvVAYg9u5N5K7b+6kLZ+pRopoybyOWEnJ89lxZ5glFj55L4i9cDBFsVFRXF7du3/9B1
      /B/awqG3L/k5BwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top highest paid roles' width='192'>
      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
      /x++7e/ueqQZFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='112' name='Total Vacancy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABwCAYAAABIFn9yAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAXdUlEQVR4nO2dfVBU193Hv/sCy7K8LyAgIG9GXlQoCAEiVNEKglRJhL7Egpk6Np02LdZO
      tFNtMlYzmU5qMi2dqNiOg22q0iYpdYyNJigvCQIKC7ossIWwCwssLwssuC8sd58/ePY+bHaB
      BRHhuefzF9w9997fufd8z/n9zjn3HJbRaDSCQGAo7GdtAIHwLCECIDAaIgACoyECIDAaIgAC
      oyECIDAaIgACoyECIDAaIgACoyECIDAaIgACoyECIDAaIgACoyECIDAaIgACoyECIDAaIgAC
      oyECIDAaIgACoyECIDAaIgACoyECIDAaIgACoyECIDAaIgACoyECIDAaIgACoyECIDAaIgAC
      oyECIDAaIgACoyECIDAaIgACoyECIDAaIgACoyECIDAaIgACo+E+awNWAxRFYWRkBAaDYcHn
      crlcuLm5gc2ev65RqVT4+9//Di6Xi4KCAvB4vMWYa8Ho6Ch0Ot286dhsNjw8POa0dWBgAFVV
      VWhqakJ7ezsAYP369diyZQu2b98OR0fHBdv3tPJtCyyyTer8TExM4Kc//Smam5sXfO6mTZtQ
      VFQEgUAwaxq1Wo33338fZWVl0Gq1Np1jKwaDAb/85S9RVVU1b1pvb29cunQJ3t7eZscpikJr
      ayveeusttLa2gqIoq+c7OjqisLAQ+/bts0nwTzPftkJagKcMh8MBi8Wy+tvjx49x+fJlXL58
      GVqt9qncf2JiAv39/Ys+//Hjx3jnnXdw/fr1WQv+zLRvv/02BgcHcejQoVlFsBz5thUiABvg
      crlISkpCQEDAvGn1ej1qa2sxNjYGAEhNTbVwC7RaLa5evYpLly5BrVY/FZtNTExMYHR0FAEB
      AcjPz5/TvXBwcICLi4vZMalUis8++4wu/KGhocjPz0dSUhI8PDwwOTmJ9vZ2FBUVoba2FhRF
      obS0FNu2bcNzzz1ndq3lzLetEAHYAI/Hw+HDh21KW1FRgYqKCgBAYGAgdu/ebZGmpKQEFy5c
      oP93dHRERkYG7ty5g+Hh4aUx+n8ZHBzExMQEnnvuOWRnZ4PLXdwr9/Pzw/Hjx5GYmGhWs9vZ
      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
    </thumbnail>
    <thumbnail height='192' name='Vacancies by Province and Top Jobs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vacancy Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vacancy by job title' width='192'>
      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
      ZS3myDYzAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
